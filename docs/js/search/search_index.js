var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.132,1,2.382]],["body/classes/AllExceptionsFilter.html",[0,0.139,1,3.363,2,0.963,3,0.304,4,0.264,5,0.304,6,3.444,7,2.459,8,5.181,9,0.346,10,1.626,11,4.043,12,2.459,13,3.444,14,5.929,15,0.582,16,3.444,17,1.626,18,0.031,19,0.854,20,0.521,21,0.931,22,4.601,23,2.769,24,5.53,25,3.444,26,4.828,27,1.042,28,3.363,29,0.587,30,5.181,31,3.601,32,1.287,33,2.243,34,2.517,35,0.304,36,2.885,37,2.243,38,1.841,39,3.444,40,3.444,41,4.601,42,2.023,43,2.885,44,3.444,45,3.444,46,2.885,47,2.29,48,3.444,49,3.444,50,3.444,51,5.181,52,3.444,53,3.444,54,4.601,55,3.444,56,3.444,57,3.444,58,2.885,59,2.517,60,3.363,61,3.444,62,3.444,63,3.444,64,3.444,65,3.444,66,3.444,67,3.444,68,0.021,69,0.021]],["title/modules/AppModule.html",[70,1.349,71,2.122]],["body/modules/AppModule.html",[0,0.163,1,2.95,3,0.251,4,0.218,5,0.251,18,0.031,23,2.505,26,2.384,29,0.694,32,0.796,33,2.628,35,0.251,47,1.178,68,0.018,69,0.018,70,2.229,71,3.947,72,1.973,73,1.672,74,2.08,75,2.08,76,1.853,77,2.628,78,1.853,79,2.384,80,2.384,81,3.286,82,3.286,83,3.286,84,2.95,85,1.853,86,2.08,87,2.846,88,2.95,89,4.035,90,2.846,91,3.427,92,2.08,93,4.035,94,4.035,95,2.846,96,2.384,97,3.427,98,2.384,99,2.846,100,1.853,101,2.846,102,4.688,103,2.95,104,1.178,105,4.035,106,3.506,107,1.521,108,2.846,109,2.846,110,2.846,111,2.494,112,2.846,113,2.846,114,2.846,115,2.846,116,4.035,117,2.846,118,3.381,119,2.846,120,2.846,121,2.846,122,2.846,123,2.846,124,2.846,125,2.846,126,1.279,127,2.384,128,3.927,129,2.846,130,2.846,131,2.846,132,2.95,133,4.688,134,2.846,135,2.846,136,2.846,137,2.846,138,2.846,139,2.846,140,2.846,141,2.846,142,1.392,143,2.846,144,3.381,145,0.93,146,2.08,147,2.846,148,1.853,149,2.08,150,2.384,151,0.736]],["title/classes/ArgumentInfoDto.html",[0,0.132,152,2.122]],["body/classes/ArgumentInfoDto.html",[0,0.186,2,0.771,3,0.243,4,0.211,5,0.243,9,0.277,15,0.636,18,0.031,19,1.101,20,0.681,21,0.798,29,0.312,35,0.407,38,2.107,68,0.018,69,0.018,145,1.289,151,0.712,152,3.463,153,2.014,154,1.019,155,3.365,156,1.305,157,2.251,158,1.66,159,1.406,160,2.308,161,1.238,162,2.755,163,2.567,164,2.882,165,4.336,166,4.195,167,2.755,168,2.686,169,2.755,170,2.882,171,2.755,172,1.14,173,3.674,174,1.771,175,2.316,176,2.316,177,2.107,178,2.567,179,3.674,180,3.887,181,1.618,182,4.336,183,1.618,184,1.794,185,1.472,186,2.882,187,1.794,188,2.014,189,2.882,190,2.014,191,2.882]],["title/modules/BaseModule.html",[70,1.349,81,1.914]],["body/modules/BaseModule.html",[0,0.187,3,0.408,4,0.354,5,0.408,18,0.03,29,0.698,32,1.293,35,0.408,68,0.025,69,0.025,70,2.296,72,2.26,81,3.258,88,3.378,192,4.622,193,5.545,194,3.872,195,5.545,196,3.378,197,2.905,198,4.622]],["title/classes/CategoryInfoDto.html",[0,0.132,178,2.122]],["body/classes/CategoryInfoDto.html",[0,0.189,2,0.793,3,0.25,4,0.217,5,0.25,9,0.285,15,0.592,18,0.031,19,1.109,20,0.676,21,0.574,29,0.321,35,0.413,38,2.151,68,0.018,69,0.018,145,1.315,151,0.733,152,3.316,153,2.072,154,1.04,155,2.072,156,1.314,157,1.386,158,1.665,159,1.309,163,1.846,164,2.072,165,3.93,166,4.209,168,2.5,170,2.072,172,1.174,173,3.722,174,1.808,175,2.364,176,2.364,177,2.151,178,3.046,179,4.199,180,4.291,181,1.666,182,4.365,183,1.666,184,1.846,185,1.515,186,2.941,187,1.846,188,2.072,189,2.941,190,2.072,191,2.941,199,2.835,200,2.835,201,2.835]],["title/controllers/CommandController.html",[202,1.464,203,2.73]],["body/controllers/CommandController.html",[0,0.113,3,0.247,4,0.214,5,0.247,9,0.281,10,1.406,11,2.041,15,0.503,17,1.639,18,0.031,19,0.518,20,0.605,21,0.565,27,1.529,29,0.648,31,1.818,32,0.781,34,2.041,35,0.247,42,2.97,47,1.648,60,2.909,68,0.018,69,0.018,111,1.946,126,2.497,142,1.946,151,1.029,156,1.176,159,1.113,161,2.272,172,1.156,181,2.725,197,1.365,202,1.788,203,3.334,204,2.792,205,3.265,206,5.056,207,3.98,208,2.792,209,2.909,210,2.792,211,4.236,212,3.98,213,2.592,214,5.056,215,2.97,216,3.98,217,2.792,218,3.14,219,2.792,220,2.725,221,2.792,222,3.98,223,3.125,224,2.479,225,3.724,226,4.236,227,3.98,228,2.792,229,2.339,230,2.041,231,1.818,232,3.334,233,2.339,234,1.818,235,3.98,236,2.041,237,2.041,238,2.041,239,2.792,240,3.39,241,2.041,242,2.792,243,1.156,244,1.492,245,2.792,246,2.792,247,2.792,248,2.592,249,2.909,250,2.909,251,1.365,252,2.792,253,2.339,254,2.792,255,2.792,256,2.339,257,2.792,258,2.792,259,2.792,260,2.792,261,2.792,262,2.792,263,2.041,264,2.792]],["title/classes/CommandInfoDto.html",[0,0.132,181,1.914]],["body/classes/CommandInfoDto.html",[0,0.174,2,0.685,3,0.216,4,0.188,5,0.216,9,0.246,15,0.728,18,0.031,19,1.07,20,0.719,21,0.496,29,0.277,35,0.38,38,1.935,68,0.017,69,0.017,145,1.183,151,0.936,152,3.459,153,1.791,154,0.936,155,1.791,156,1.267,157,1.198,158,1.66,159,1.611,160,3.607,161,2.28,163,1.595,164,1.791,165,3.882,166,4.151,168,2.301,170,1.791,172,1.014,173,3.476,174,1.626,175,2.127,176,2.127,177,1.935,178,2.804,179,4.016,180,4.123,181,2.127,182,4.598,183,1.439,184,1.595,185,1.309,186,2.646,187,1.595,188,3.147,189,3.709,190,3.147,191,3.709,265,3.033,266,2.449,267,2.449,268,2.449,269,2.449,270,2.449,271,2.449,272,2.449,273,2.449,274,2.449]],["title/modules/CommonModule.html",[70,1.349,82,1.914]],["body/modules/CommonModule.html",[0,0.167,3,0.365,4,0.317,5,0.365,7,2.211,10,1.462,15,0.523,17,1.462,18,0.03,19,0.768,20,0.468,21,0.837,27,1.251,28,3.787,29,0.587,32,1.157,35,0.365,47,1.713,68,0.024,69,0.024,70,2.145,72,2.023,77,3.684,78,2.694,82,3.044,126,2.328,128,4.739,243,1.713,275,4.137,276,4.137,277,5.181,278,5.929,279,4.137,280,4.137,281,5.181,282,5.657,283,4.137,284,3.466,285,3.466,286,3.466,287,2.43,288,3.466,289,3.466,290,4.137,291,4.137,292,4.137]],["title/injectables/ConfigService.html",[91,2.382,293,1.464]],["body/injectables/ConfigService.html",[0,0.162,3,0.354,4,0.307,5,0.354,9,0.403,10,1.796,15,0.507,17,1.796,18,0.031,19,0.745,20,0.632,21,0.812,27,1.213,29,0.632,32,1.122,35,0.354,47,1.661,68,0.023,69,0.023,91,4.077,92,2.933,103,3.715,111,1.962,126,2.506,142,1.962,151,1.037,161,1.803,263,2.933,293,2.283,294,2.357,295,4.012,296,3.309,297,5.577,298,4.012,299,5.864,300,4.012,301,5.577,302,5.577,303,4.012,304,4.012,305,3.277,306,4.012,307,4.012,308,4.012]],["title/controllers/ContextController.html",[202,1.464,309,2.73]],["body/controllers/ContextController.html",[0,0.1,3,0.219,4,0.19,5,0.383,9,0.25,10,1.292,15,0.314,17,0.877,18,0.031,19,0.806,20,0.625,21,1.033,23,1.327,27,1.448,29,0.625,31,1.617,32,0.695,35,0.219,47,2.393,68,0.017,69,0.017,97,2.672,106,3.475,107,2.319,126,1.95,142,1.214,145,1.565,149,3.73,150,2.08,151,0.945,156,0.955,159,0.695,161,1.643,172,1.028,174,2.544,197,1.214,202,1.643,205,2.549,215,1.954,229,2.08,231,1.617,234,1.617,236,1.815,237,1.815,238,1.815,240,2.672,241,1.815,248,1.617,249,1.815,250,1.815,251,2.122,305,1.459,309,3.063,310,2.483,311,4.339,312,2.483,313,4.031,314,3.966,315,2.483,316,4.01,317,3.117,318,2.483,319,2.483,320,3.172,321,2.483,322,1.954,323,2.672,324,5.337,325,3.323,326,2.998,327,3.117,328,4.01,329,2.672,330,2.381,331,3.323,332,2.381,333,3.656,334,2.483,335,2.08,336,1.815,337,4.339,338,2.483,339,3.063,340,2.483,341,2.483,342,2.483,343,2.483,344,2.483,345,2.483,346,3.063,347,3.172,348,2.483,349,2.483,350,2.483,351,2.483,352,3.656,353,2.483,354,2.08,355,1.617,356,2.483,357,2.483,358,2.483,359,2.483,360,2.148,361,2.483,362,2.483,363,2.483,364,3.656,365,2.483,366,2.483,367,2.483,368,2.483]],["title/classes/ContextDto.html",[0,0.132,369,2.382]],["body/classes/ContextDto.html",[0,0.225,2,1.305,3,0.412,4,0.357,5,0.412,9,0.469,15,0.59,18,0.03,20,0.528,29,0.528,35,0.412,68,0.025,69,0.025,145,1.823,154,1.442,159,1.305,185,3.188,369,4.077,370,4.666,371,5.965,372,4.666,373,2.494]],["title/classes/CreateProjectDto.html",[0,0.132,374,1.914]],["body/classes/CreateProjectDto.html",[0,0.214,2,1.198,3,0.378,4,0.328,5,0.378,7,2.829,9,0.431,15,0.669,18,0.03,19,1.067,20,0.651,29,0.599,35,0.378,68,0.024,69,0.024,104,1.773,154,1.369,156,1.264,157,2.589,158,1.552,159,1.481,373,2.289,374,3.11,375,5.746,376,3.131,377,4.435,378,3.588,379,3.588,380,3.909,381,4.282,382,2.516]],["title/classes/DiagramDto.html",[0,0.132,220,1.914]],["body/classes/DiagramDto.html",[0,0.232,2,1.191,3,0.376,4,0.326,5,0.376,7,2.276,9,0.428,15,0.538,18,0.03,19,0.791,20,0.597,29,0.597,35,0.466,68,0.024,69,0.024,154,1.364,156,0.937,157,2.803,158,1.549,159,1.191,209,3.856,218,2.501,220,3.099,223,2.276,224,2.819,225,3.732,243,1.763,244,2.276,373,2.276,380,4.009,383,3.567,384,4.258,385,3.856,386,4.419]],["title/classes/EngineDto.html",[0,0.132,218,1.914]],["body/classes/EngineDto.html",[0,0.225,2,1.119,3,0.353,4,0.306,5,0.353,7,2.711,9,0.402,15,0.704,18,0.03,19,1.034,20,0.663,29,0.574,35,0.448,68,0.023,69,0.023,154,1.312,156,1.226,157,2.724,158,1.563,159,1.558,209,4.072,218,2.98,220,2.35,223,2.138,224,3.131,225,2.605,243,1.656,244,2.138,373,2.138,380,3.815,383,3.352,385,4.072,386,4.667,387,5.073,388,4.001,389,4.001,390,4.001]],["title/controllers/HealthController.html",[202,1.464,391,2.73]],["body/controllers/HealthController.html",[0,0.239,3,0.299,4,0.259,5,0.299,9,0.341,10,1.608,12,2.432,15,0.428,18,0.031,27,1.376,29,0.515,32,0.948,35,0.299,68,0.021,69,0.021,126,2.309,132,4.407,145,1.488,151,0.876,156,0.745,159,0.948,183,1.99,196,2.476,197,1.657,202,2.468,205,3.467,211,3.813,215,3.222,231,2.964,248,2.964,251,2.513,335,3.813,391,3.813,392,3.388,393,6.129,394,3.388,395,3.388,396,4.551,397,5.494,398,4.551,399,4.551,400,4.551,401,3.388,402,5.494,403,3.388,404,5.494,405,5.494,406,5.139,407,3.813,408,4.551,409,3.757,410,3.388,411,3.388,412,3.388,413,3.388,414,3.388]],["title/classes/PaginatedResult.html",[0,0.132,331,2.122]],["body/classes/PaginatedResult.html",[0,0.117,2,0.51,3,0.161,4,0.14,5,0.161,9,0.183,10,1.021,12,1.916,15,0.721,17,0.645,18,0.031,19,0.339,20,0.613,21,0.899,23,2.526,27,1.497,35,0.255,42,2.107,68,0.013,69,0.013,111,1.754,142,1.413,145,0.944,148,3.761,151,0.927,154,0.747,156,0.636,158,1.475,168,2.179,174,2.9,177,1.544,213,1.881,230,2.112,251,2.173,287,3.35,296,1.881,313,4.196,314,3.526,317,2.335,322,2.375,323,2.112,326,1.697,327,3.598,329,3.958,330,2.655,331,2.655,332,1.881,355,3.078,360,3.724,415,1.529,416,3.96,417,2.42,418,3.004,419,3.004,420,4.039,421,3.753,422,3.416,423,3.416,424,3.416,425,3.586,426,2.42,427,3.224,428,1.825,429,2.42,430,3.723,431,3.416,432,3.416,433,3.455,434,3.96,435,1.825,436,2.42,437,1.825,438,4.726,439,1.825,440,1.825,441,1.825,442,1.825,443,1.825,444,1.825,445,1.825,446,3.416,447,1.825,448,1.825,449,3.004,450,3.004,451,1.825,452,1.529,453,1.334,454,2.42,455,2.42,456,2.42,457,1.334,458,1.529,459,1.529,460,1.529,461,1.529,462,1.529,463,1.529,464,1.529,465,2.42,466,2.112,467,2.42,468,1.529,469,1.529,470,1.529,471,1.529]],["title/classes/PaginatedResultDto.html",[0,0.132,320,2.382]],["body/classes/PaginatedResultDto.html",[0,0.131,2,0.91,3,0.287,4,0.249,5,0.287,9,0.327,15,0.737,18,0.031,20,0.676,21,1.093,29,0.368,35,0.287,68,0.028,69,0.02,145,1.063,148,3.518,154,1.145,158,1.397,159,1.631,161,1.461,166,4.124,172,1.346,174,2.728,175,2.601,265,2.725,287,3.32,313,4.092,314,3.68,320,3.236,322,2.366,330,2.883,332,2.883,355,2.883,360,3.32,420,4.131,421,3.679,427,2.883,433,3.236,472,3.252,473,3.252,474,4.427,475,3.252,476,3.252,477,3.252,478,3.252,479,3.252,480,4.427]],["title/classes/Pagination.html",[0,0.132,327,2.122]],["body/classes/Pagination.html",[0,0.14,2,0.645,3,0.204,4,0.177,5,0.204,9,0.232,12,1.233,15,0.657,18,0.031,20,0.61,21,0.934,23,2.22,27,1.256,35,0.306,42,1.355,68,0.016,69,0.016,111,1.128,142,1.128,145,1.131,148,3.691,151,1.074,154,0.895,156,0.508,158,1.465,168,1.85,174,2.882,177,1.233,213,1.502,230,1.686,251,2.419,287,3.33,296,1.502,313,4.165,314,3.609,317,1.502,322,2.22,323,1.686,326,2.033,327,3.221,329,3.938,330,2.705,331,2.254,332,1.502,355,3.006,360,3.717,415,1.932,416,4.144,417,1.932,418,1.932,419,1.932,420,3.938,421,3.797,422,1.932,423,1.932,424,1.932,426,1.932,427,3.221,429,1.932,430,3.868,431,3.48,432,3.48,433,3.374,434,3.868,436,1.932,446,2.9,449,1.932,450,1.932,452,1.932,453,1.686,454,2.9,455,2.9,456,2.9,457,1.686,458,1.932,459,1.932,460,1.932,461,1.932,462,1.932,463,1.932,464,1.932,465,2.9,466,2.53,467,2.9,468,1.932,469,1.932,470,1.932,471,1.932,481,2.306,482,2.306,483,2.306,484,2.306,485,2.306,486,2.306,487,2.306]],["title/entities/Project.html",[104,1.349,488,2.382]],["body/entities/Project.html",[0,0.164,3,0.252,4,0.219,5,0.252,9,0.287,15,0.728,18,0.031,19,1.139,20,0.707,21,1.034,23,2.163,29,0.458,35,0.252,47,1.675,68,0.018,69,0.018,104,1.675,111,1.979,144,3.936,151,1.321,154,1.046,156,1.034,158,1.568,159,1.611,176,3.002,305,3.29,325,2.635,457,2.958,488,2.089,489,2.394,490,2.857,491,3.434,492,3.936,493,3.434,494,3.936,495,3.059,496,5.109,497,5.599,498,4.046,499,4.691,500,5.109,501,5.109,502,4.046,503,2.857,504,2.857,505,5.109,506,4.046,507,2.857,508,4.046,509,2.857,510,4.046,511,2.857,512,4.046,513,2.857,514,2.857,515,4.046,516,2.857,517,4.046,518,2.857,519,2.394,520,5.392,521,4.046,522,2.857,523,4.046,524,2.089,525,2.857,526,4.046,527,2.857,528,2.857]],["title/controllers/ProjectsController.html",[202,1.464,529,2.382]],["body/controllers/ProjectsController.html",[0,0.04,3,0.087,4,0.075,5,0.444,9,0.099,10,0.609,11,2.295,15,0.566,17,1.581,18,0.031,19,0.918,20,0.646,21,0.906,27,1.353,29,0.56,31,0.641,32,0.276,34,0.72,35,0.087,36,0.825,37,0.641,47,2.345,68,0.008,69,0.008,104,2.36,107,0.526,111,0.482,126,2.632,132,0.72,142,2.572,145,1.026,146,0.72,149,1.261,151,1.278,154,0.255,156,1.184,158,1.443,159,1.252,161,2.332,172,0.408,185,1.989,197,0.482,202,0.443,205,3.442,215,2.906,218,2.78,220,1.352,223,2.733,224,1.678,225,1.498,226,3.475,232,0.825,233,0.825,234,0.641,236,0.72,237,0.72,238,0.72,240,3.032,241,0.72,243,0.714,244,0.922,248,2.572,249,2.295,250,2.295,251,0.482,253,0.825,256,2.63,263,3.459,317,0.641,322,0.526,326,1.013,328,0.825,336,1.261,339,0.825,346,0.825,347,4.111,360,0.579,369,2.019,374,1.623,382,0.579,385,2.019,491,0.72,493,0.72,495,3.379,529,1.261,530,0.985,531,1.261,532,1.445,533,1.445,534,1.725,535,1.725,536,1.725,537,1.445,538,1.725,539,1.725,540,2.314,541,2.301,542,0.985,543,0.985,544,0.985,545,0.985,546,0.825,547,2.314,548,0.985,549,0.985,550,0.825,551,0.985,552,0.985,553,0.985,554,0.985,555,0.985,556,0.985,557,0.985,558,0.985,559,0.985,560,0.985,561,0.985,562,0.825,563,0.985,564,0.985,565,0.985,566,0.985,567,0.985,568,0.985,569,0.985,570,0.985,571,0.985,572,0.825,573,2.572,574,0.985,575,0.985,576,0.985,577,2.301,578,0.985,579,0.985,580,0.985,581,2.762,582,2.525,583,0.985,584,0.985,585,0.985,586,2.762,587,0.985,588,4.148,589,1.725,590,1.725,591,1.725,592,1.725,593,0.985,594,0.985,595,0.985,596,1.445,597,0.985,598,0.985,599,0.985,600,1.352,601,0.825,602,1.123,603,1.261,604,0.72,605,0.985,606,0.72,607,0.985,608,1.725,609,0.985,610,1.725,611,0.985,612,0.985,613,0.985,614,0.985,615,2.894,616,1.725,617,1.261,618,0.985,619,0.985,620,0.985,621,0.985,622,1.725,623,1.725,624,1.725,625,0.985,626,0.985,627,0.985,628,0.985,629,0.985,630,0.985,631,0.985,632,0.985,633,3.721,634,3.721,635,3.118,636,0.985,637,0.985,638,2.301,639,3.454,640,0.985,641,2.762,642,1.725,643,2.762,644,1.725,645,2.762,646,2.301,647,3.454,648,0.985,649,0.985,650,0.985,651,0.985,652,0.985,653,0.985,654,3.454,655,2.301,656,1.725,657,2.762,658,0.985,659,0.985,660,0.985,661,0.985,662,0.825,663,0.985,664,0.985,665,0.985,666,0.985,667,0.985,668,2.762,669,1.725,670,1.725,671,1.725,672,2.301,673,1.725,674,1.725,675,0.985,676,0.985,677,0.985,678,0.985,679,0.985,680,1.725,681,0.825,682,0.985,683,0.985,684,1.725,685,0.985,686,3.721,687,3.14,688,1.725,689,0.985,690,0.985,691,0.985,692,0.985,693,0.985,694,2.301,695,0.985,696,1.725,697,0.985,698,1.725,699,0.985,700,0.985,701,0.985,702,0.985,703,0.985,704,0.985,705,0.985,706,1.725,707,0.985,708,0.985,709,0.985,710,2.301,711,1.725,712,1.725,713,0.985,714,0.985,715,0.985,716,0.985,717,1.725,718,0.985,719,0.985,720,0.985,721,0.985,722,0.985,723,0.985,724,0.985,725,0.985,726,1.725,727,0.985,728,0.985,729,0.985,730,0.985,731,0.985,732,0.985,733,0.985]],["title/modules/ProjectsModule.html",[70,1.349,83,1.914]],["body/modules/ProjectsModule.html",[0,0.164,3,0.358,4,0.311,5,0.358,18,0.031,29,0.702,32,1.135,35,0.358,68,0.023,69,0.023,70,2.321,72,1.984,73,2.383,74,2.965,75,2.965,76,2.642,77,3.651,78,2.642,83,3.641,84,3.741,85,2.642,86,2.965,88,2.965,98,3.398,100,2.642,104,1.679,107,2.168,197,2.503,382,2.383,529,4.098,600,3.641,601,3.398,606,2.965,734,3.398,735,3.398,736,4.056,737,4.056,738,4.056,739,4.056,740,4.056,741,4.056,742,4.056]],["title/injectables/ProjectsService.html",[293,1.464,600,1.914]],["body/injectables/ProjectsService.html",[0,0.104,3,0.228,4,0.197,5,0.228,9,0.259,10,1.328,12,2.009,15,0.706,17,1.973,18,0.031,19,1.084,20,0.632,21,1.13,27,1.636,29,0.613,32,0.722,35,0.228,37,1.68,47,1.836,68,0.017,69,0.017,100,1.68,104,2.239,146,1.886,151,1.399,156,0.568,158,1.509,205,3.723,215,3.247,293,1.689,294,1.515,322,1.379,336,1.886,347,3.954,374,3.044,382,1.515,409,1.886,466,1.886,492,3.15,494,2.161,495,3.523,524,1.886,531,2.748,532,3.15,533,3.15,537,3.15,540,3.15,546,3.15,547,4.084,550,3.15,562,3.15,572,3.15,573,3.727,600,2.209,602,3.375,603,2.748,604,1.886,743,2.579,744,3.759,745,2.579,746,3.954,747,2.579,748,3.759,749,2.579,750,2.579,751,2.579,752,2.579,753,2.579,754,3.759,755,2.579,756,2.579,757,2.579,758,2.579,759,2.579,760,2.579,761,3.759,762,2.579,763,2.579,764,2.579,765,2.579,766,2.579,767,2.579,768,2.579,769,2.579,770,2.579,771,2.579,772,3.759,773,2.579,774,2.579,775,3.759,776,2.579,777,2.579]],["title/injectables/RequestService.html",[293,1.464,778,2.73]],["body/injectables/RequestService.html",[0,0.17,3,0.372,4,0.322,5,0.372,9,0.423,10,1.85,12,2.249,15,0.662,17,1.487,18,0.03,19,0.781,20,0.477,21,0.852,27,1.273,29,0.646,32,1.177,33,2.741,35,0.372,37,2.741,68,0.024,69,0.024,106,4.21,107,2.249,118,3.526,151,1.088,293,2.353,294,2.472,409,3.076,778,4.387,779,4.208,780,5.965,781,4.208,782,4.208,783,4.208,784,5.237,785,4.208,786,4.208,787,4.208]],["title/classes/UpdateProjectDto.html",[0,0.132,573,2.122]],["body/classes/UpdateProjectDto.html",[0,0.194,2,1.344,3,0.424,4,0.368,5,0.424,18,0.03,29,0.643,35,0.424,68,0.026,69,0.026,172,1.989,296,3.129,374,2.822,376,3.512,531,3.512,573,3.695,788,4.804,789,4.804,790,4.804,791,4.804]],["title/classes/UploadProjectDto.html",[0,0.132,602,2.122]],["body/classes/UploadProjectDto.html",[0,0.197,2,1.053,3,0.332,4,0.288,5,0.332,7,2.607,9,0.378,15,0.75,18,0.03,19,1.005,20,0.688,21,1.159,29,0.552,35,0.332,68,0.022,69,0.022,104,1.558,154,1.261,156,1.191,157,2.972,158,1.653,159,1.659,373,2.011,376,2.751,377,4.087,378,3.153,379,3.153,380,3.729,382,2.211,491,3.956,493,3.956,495,3.524,602,3.177,792,6.078,793,3.763,794,3.763,795,3.763,796,5.412,797,3.763]],["title/injectables/UtilService.html",[293,1.464,798,2.73]],["body/injectables/UtilService.html",[0,0.115,3,0.251,4,0.218,5,0.251,9,0.286,10,1.426,15,0.681,17,2.076,18,0.031,19,1,20,0.677,21,1.09,27,1.543,29,0.322,32,0.796,35,0.251,38,2.157,68,0.018,69,0.018,126,2.842,151,1.319,158,1.567,161,1.279,243,1.178,251,2.998,285,2.384,286,2.384,287,1.672,288,3.927,289,2.384,293,1.813,294,1.672,305,2.754,325,1.853,427,4.064,453,2.95,582,3.728,798,3.381,799,2.384,800,4.035,801,4.035,802,4.035,803,4.035,804,2.846,805,5.1,806,4.035,807,5.977,808,4.818,809,2.846,810,4.688,811,4.035,812,2.846,813,4.035,814,2.846,815,2.846,816,3.381,817,4.035,818,4.688,819,2.846,820,4.688,821,2.846,822,2.846,823,2.846,824,2.846,825,2.846,826,2.846,827,4.035,828,2.846,829,2.846,830,2.846,831,2.846,832,2.846]],["title/dependencies.html",[73,2.3,833,2.285]],["body/dependencies.html",[0,0.204,18,0.031,32,1.11,33,2.584,68,0.023,69,0.023,73,2.331,92,2.901,96,3.325,97,2.901,100,2.584,107,2.121,172,1.643,194,3.325,196,2.901,223,2.121,224,2.121,243,1.643,244,2.121,373,2.121,519,3.325,524,2.901,582,2.901,603,2.901,604,2.901,606,2.901,615,3.325,617,2.901,834,3.968,835,5.549,836,3.968,837,3.968,838,3.968,839,3.968,840,3.968,841,3.968,842,3.968,843,3.968,844,3.968,845,3.968,846,3.968,847,3.968,848,3.968,849,3.968,850,3.968,851,3.968,852,3.968,853,3.968,854,3.968,855,3.968,856,3.968,857,3.968,858,3.968,859,3.968,860,3.968,861,3.968,862,3.968,863,3.968,864,3.968,865,3.968,866,3.968,867,3.968,868,3.968]],["title/miscellaneous/enumerations.html",[869,1.458,870,3.28]],["body/miscellaneous/enumerations.html",[9,0.285,18,0.031,20,0.321,43,2.375,58,2.375,59,2.072,60,2.072,68,0.018,69,0.018,85,1.846,106,2.62,127,2.375,163,2.62,187,1.846,213,1.846,231,1.846,234,2.62,305,3.952,316,4.266,407,2.375,488,2.072,499,2.375,635,3.919,681,2.375,869,1.515,870,2.375,871,2.835,872,2.835,873,4.024,874,2.835,875,2.835,876,2.835,877,4.024,878,2.835,879,2.835,880,2.835,881,4.024,882,4.024,883,2.835,884,2.835,885,2.835,886,4.678,887,2.835,888,2.835,889,2.835,890,4.024,891,2.835,892,2.835,893,2.835,894,2.835,895,2.835,896,2.835,897,2.835,898,2.835,899,2.835,900,4.024,901,2.835,902,2.835,903,2.835,904,4.024,905,4.024,906,2.835,907,2.835,908,4.024,909,2.835,910,2.835,911,2.835,912,2.835,913,2.835,914,2.835,915,2.835,916,2.835,917,4.024,918,4.024,919,4.024,920,2.835,921,2.835,922,4.024,923,4.678,924,2.835,925,2.835,926,2.835,927,2.835,928,2.835,929,2.835,930,2.835,931,2.835,932,2.835,933,2.835,934,2.835,935,2.835,936,2.835,937,2.835,938,2.835,939,2.835,940,2.835,941,2.835,942,4.024,943,2.835,944,2.835,945,2.835,946,2.835,947,2.835,948,2.835,949,2.835,950,2.835,951,2.835,952,2.835,953,2.835,954,4.024,955,2.835,956,2.835,957,2.835,958,2.835,959,2.375,960,2.835]],["title/miscellaneous/functions.html",[869,1.458,961,3.28]],["body/miscellaneous/functions.html",[9,0.429,17,1.867,18,0.029,19,0.981,20,0.598,21,1.07,27,1.813,68,0.024,69,0.024,76,4.088,215,3.067,284,4.427,596,4.808,869,2.282,961,3.577,962,4.27,963,4.27,964,4.27,965,4.27,966,5.284,967,4.27,968,4.27,969,4.27,970,4.27,971,4.27,972,4.27,973,4.27,974,4.27,975,4.27,976,4.27,977,6.162,978,4.427,979,4.27,980,4.27,981,4.27,982,4.27]],["title/index.html",[9,0.274,983,2.728,984,2.728]],["body/index.html",[4,0.301,18,0.03,46,3.289,59,2.869,68,0.023,69,0.023,104,1.625,156,0.864,243,1.625,354,3.289,746,2.869,978,3.289,985,3.925,986,3.925,987,5.012,988,3.925,989,3.925,990,3.925,991,3.925,992,3.925,993,5.521,994,3.925,995,3.925,996,6.247,997,3.925,998,3.925,999,6.146,1000,3.925,1001,3.925,1002,5.012,1003,3.925,1004,3.289,1005,3.925,1006,3.925,1007,5.012,1008,5.012,1009,3.925,1010,3.925,1011,3.925,1012,3.925,1013,5.012,1014,5.012,1015,3.925,1016,3.925,1017,3.925,1018,3.925,1019,3.289,1020,3.925,1021,3.925,1022,3.925,1023,3.925,1024,3.925,1025,3.925,1026,3.925,1027,3.925,1028,3.925,1029,3.925,1030,3.925,1031,3.925,1032,3.925,1033,3.925,1034,3.925,1035,3.289]],["title/modules.html",[72,2.168]],["body/modules.html",[18,0.026,42,3.367,68,0.026,69,0.026,71,3.181,72,2.389,81,2.87,82,2.87,83,2.87,1019,4.801,1036,5.73,1037,5.73,1038,6.273,1039,5.73]],["title/overview.html",[1040,3.713]],["body/overview.html",[2,1.231,18,0.029,68,0.025,69,0.025,70,1.821,71,4.21,72,2.151,73,2.584,74,3.215,75,3.215,76,2.865,77,2.865,78,2.865,79,3.685,80,3.685,81,3.416,82,3.416,83,3.651,84,3.934,85,2.865,86,3.215,197,2.151,294,2.584,326,2.584,489,3.685,600,3.416,734,3.685,735,3.685,1040,3.685,1041,5.814,1042,4.399]],["title/properties.html",[154,1.012,833,2.285]],["body/properties.html",[15,0.581,18,0.03,68,0.025,69,0.025,154,1.188,156,1.011,223,2.952,224,3.362,243,2.287,244,2.455,617,4.038,662,3.848,746,3.357,959,3.848,1035,3.848,1043,4.592,1044,4.592,1045,4.592,1046,4.592,1047,5.524,1048,4.592,1049,4.592,1050,4.592,1051,4.592,1052,4.592,1053,4.592]],["title/miscellaneous/typealiases.html",[869,1.458,1054,3.915]],["body/miscellaneous/typealiases.html",[9,0.424,18,0.03,20,0.676,28,3.085,38,2.256,68,0.024,69,0.024,103,3.835,145,1.38,158,1.091,168,2.256,174,1.896,175,2.48,176,2.48,177,2.256,183,2.48,184,2.749,185,2.256,325,3.416,799,3.536,808,4.395,816,3.536,869,2.256,1004,4.395,1055,4.221,1056,5.246,1057,6.141,1058,5.246,1059,5.246,1060,5.246,1061,5.246,1062,5.971,1063,5.246,1064,4.221,1065,4.221,1066,5.708,1067,4.221]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArgumentInfoDto.html":{},"modules/BaseModule.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":823,"title":{},"body":{"injectables/UtilService.html":{}}}],["0.1.13",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["0.19.3.tgz",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["0.19.3/xlsx",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["0.2.5",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["0.3.16",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":326,"title":{},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"controllers/ProjectsController.html":{},"overview.html":{}}}],["1.0.0",{"_index":1043,"title":{},"body":{"properties.html":{}}}],["1.0.2",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":328,"title":{},"body":{"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["10.0.1",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":684,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["13",{"_index":1042,"title":{},"body":{"overview.html":{}}}],["150",{"_index":512,"title":{},"body":{"entities/Project.html":{}}}],["1}&limit=${this.limit",{"_index":456,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["2.0.0",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["250",{"_index":500,"title":{},"body":{"entities/Project.html":{}}}],["3.0.1",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1041,"title":{},"body":{"overview.html":{}}}],["494734673",{"_index":972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["5.4.1",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["6.3.0",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":363,"title":{},"body":{"controllers/ContextController.html":{}}}],["8.1.4",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["8.12.0",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["8.9.0",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["__dirname}/../../../public/contexts",{"_index":698,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["__dirname}/../../../public/projects",{"_index":667,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["__dirname}/../../public/projects",{"_index":742,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["__dirname}/../public",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["abstract",{"_index":452,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["acceptable",{"_index":912,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accepted",{"_index":163,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"miscellaneous/enumerations.html":{}}}],["acceptedtypes",{"_index":155,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["ajv",{"_index":615,"title":{},"body":{"controllers/ProjectsController.html":{},"dependencies.html":{}}}],["ajv.validateschema(body.context",{"_index":725,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["ajv.validateschema(engine.dataschema",{"_index":695,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["aliases",{"_index":1055,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["allowed",{"_index":681,"title":{},"body":{"controllers/ProjectsController.html":{},"miscellaneous/enumerations.html":{}}}],["along",{"_index":417,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["amazing",{"_index":1020,"title":{},"body":{"index.html":{}}}],["ambiguous",{"_index":890,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":230,"title":{},"body":{"controllers/CommandController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["apibody",{"_index":608,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["apiconsumes",{"_index":609,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["apiconsumes('multipart/form",{"_index":661,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["apipaginatedresponse",{"_index":597,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["apipaginatedresponse(project",{"_index":628,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["apiproperty",{"_index":166,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"classes/PaginatedResultDto.html":{}}}],["apiproperty({enum",{"_index":160,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["apiproperty({type",{"_index":265,"title":{},"body":{"classes/CommandInfoDto.html":{},"classes/PaginatedResultDto.html":{}}}],["apiquery",{"_index":337,"title":{},"body":{"controllers/ContextController.html":{}}}],["apiresponse",{"_index":240,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["apitags",{"_index":241,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["apitags('context",{"_index":342,"title":{},"body":{"controllers/ContextController.html":{}}}],["apitags('engine",{"_index":246,"title":{},"body":{"controllers/CommandController.html":{}}}],["apitags('projects",{"_index":619,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["app",{"_index":978,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app_filter",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":397,"title":{},"body":{"controllers/HealthController.html":{}}}],["applications",{"_index":992,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":71,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argument",{"_index":165,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["argumentinfo",{"_index":1056,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["argumentinfodto",{"_index":152,"title":{"classes/ArgumentInfoDto.html":{}},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["arguments",{"_index":189,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["argumentshost",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["argumenttype",{"_index":188,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["argv",{"_index":815,"title":{},"body":{"injectables/UtilService.html":{}}}],["array",{"_index":175,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"classes/PaginatedResultDto.html":{},"miscellaneous/typealiases.html":{}}}],["async",{"_index":205,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["authentication",{"_index":915,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["author",{"_index":1028,"title":{},"body":{"index.html":{}}}],["authoritative",{"_index":884,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["available",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CommandController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"modules.html":{}}}],["await",{"_index":347,"title":{},"body":{"controllers/ContextController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["backend#readme",{"_index":1048,"title":{},"body":{"properties.html":{}}}],["backend.git",{"_index":1053,"title":{},"body":{"properties.html":{}}}],["backend/issues",{"_index":1050,"title":{},"body":{"properties.html":{}}}],["backers",{"_index":1021,"title":{},"body":{"index.html":{}}}],["bad",{"_index":904,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bad_gateway",{"_index":953,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["bad_request",{"_index":903,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["badrequestexception",{"_index":232,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ProjectsController.html":{}}}],["badrequestexception('error",{"_index":690,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["badrequestexception('invalid",{"_index":696,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["badrequestexception('project",{"_index":731,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["badrequestexception(`error",{"_index":717,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["badrequestexception(error",{"_index":264,"title":{},"body":{"controllers/CommandController.html":{}}}],["base",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["basemodule",{"_index":81,"title":{"modules/BaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules.html":{},"overview.html":{}}}],["being",{"_index":430,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["binary",{"_index":663,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["body",{"_index":226,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ProjectsController.html":{}}}],["body.context",{"_index":726,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["body.description",{"_index":259,"title":{},"body":{"controllers/CommandController.html":{}}}],["body.rules",{"_index":258,"title":{},"body":{"controllers/CommandController.html":{}}}],["boolean",{"_index":168,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1038,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1036,"title":{},"body":{"modules.html":{}}}],["bugs",{"_index":1049,"title":{},"body":{"properties.html":{}}}],["building",{"_index":988,"title":{},"body":{"index.html":{}}}],["business",{"_index":244,"title":{},"body":{"controllers/CommandController.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/ProjectsController.html":{},"dependencies.html":{},"properties.html":{}}}],["catch",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CommandController.html":{},"controllers/ProjectsController.html":{}}}],["catch(exception",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["category",{"_index":180,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["categoryinfodto",{"_index":178,"title":{"classes/CategoryInfoDto.html":{}},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["cateroryinfo",{"_index":1058,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["cb",{"_index":669,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["cb(new",{"_index":677,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["cb(null",{"_index":674,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["certain",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["check",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{}}}],["checking",{"_index":396,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArgumentInfoDto.html":{},"modules/BaseModule.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":593,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["cluster_appmodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_projectsmodule",{"_index":734,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["cluster_projectsmodule_providers",{"_index":735,"title":{},"body":{"modules/ProjectsModule.html":{},"overview.html":{}}}],["column",{"_index":520,"title":{},"body":{"entities/Project.html":{}}}],["column({type",{"_index":496,"title":{},"body":{"entities/Project.html":{}}}],["command",{"_index":182,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["commandcontroller",{"_index":203,"title":{"controllers/CommandController.html":{}},"body":{"controllers/CommandController.html":{}}}],["commandcontroller.todiagram",{"_index":262,"title":{},"body":{"controllers/CommandController.html":{}}}],["commander",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["commandinfo",{"_index":1059,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["commandinfodto",{"_index":181,"title":{"classes/CommandInfoDto.html":{}},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{}}}],["commands",{"_index":214,"title":{},"body":{"controllers/CommandController.html":{}}}],["commandtype",{"_index":1060,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["commandtypesoptions",{"_index":1061,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["common",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["common/constants",{"_index":238,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["common/utils",{"_index":236,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["commonmodule",{"_index":82,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["compression",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"miscellaneous/typealiases.html":{}}}],["config.get('db",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":91,"title":{"injectables/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{}}}],["configuration",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":276,"title":{},"body":{"modules/CommonModule.html":{}}}],["configure(consumer",{"_index":277,"title":{},"body":{"modules/CommonModule.html":{}}}],["configuring",{"_index":718,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["conflict",{"_index":918,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["const",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/CommandController.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{}}}],["constructor(@inject(request",{"_index":786,"title":{},"body":{"injectables/RequestService.html":{}}}],["constructor(data",{"_index":426,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["constructor(httpadapterhost",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(private",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/ProjectsController.html":{}}}],["constructor(repository",{"_index":745,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["constructor(request",{"_index":781,"title":{},"body":{"injectables/RequestService.html":{}}}],["consumer",{"_index":280,"title":{},"body":{"modules/CommonModule.html":{}}}],["consumer.apply().forroutes",{"_index":292,"title":{},"body":{"modules/CommonModule.html":{}}}],["containing",{"_index":332,"title":{},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{}}}],["content",{"_index":886,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["context",{"_index":185,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"classes/ContextDto.html":{},"controllers/ProjectsController.html":{},"miscellaneous/typealiases.html":{}}}],["context_file",{"_index":498,"title":{},"body":{"entities/Project.html":{}}}],["contextcontroller",{"_index":309,"title":{"controllers/ContextController.html":{}},"body":{"controllers/ContextController.html":{}}}],["contextdto",{"_index":369,"title":{"classes/ContextDto.html":{}},"body":{"classes/ContextDto.html":{},"controllers/ProjectsController.html":{}}}],["contextfile",{"_index":491,"title":{},"body":{"entities/Project.html":{},"controllers/ProjectsController.html":{},"classes/UploadProjectDto.html":{}}}],["contexts",{"_index":324,"title":{},"body":{"controllers/ContextController.html":{}}}],["continue",{"_index":873,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["controller",{"_index":202,"title":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{}},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{}}}],["controller(urls.context.base",{"_index":341,"title":{},"body":{"controllers/ContextController.html":{}}}],["controller(urls.engine.base",{"_index":245,"title":{},"body":{"controllers/CommandController.html":{}}}],["controller(urls.projects.base",{"_index":618,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["controllers",{"_index":197,"title":{},"body":{"modules/BaseModule.html":{},"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"overview.html":{}}}],["controllers/project.controller",{"_index":737,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["convert",{"_index":222,"title":{},"body":{"controllers/CommandController.html":{}}}],["count",{"_index":480,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["coverage",{"_index":1011,"title":{},"body":{"index.html":{}}}],["create",{"_index":531,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{}}}],["create(@body",{"_index":625,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["create(body",{"_index":542,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["create(createprojectdto",{"_index":748,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["created",{"_index":882,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["created_at",{"_index":506,"title":{},"body":{"entities/Project.html":{}}}],["createdat",{"_index":492,"title":{},"body":{"entities/Project.html":{},"injectables/ProjectsService.html":{}}}],["createdatecolumn",{"_index":521,"title":{},"body":{"entities/Project.html":{}}}],["createdatecolumn({type",{"_index":504,"title":{},"body":{"entities/Project.html":{}}}],["createprojectdto",{"_index":374,"title":{"classes/CreateProjectDto.html":{}},"body":{"classes/CreateProjectDto.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{}}}],["creating",{"_index":429,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["ctx",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["current",{"_index":355,"title":{},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{}}}],["data",{"_index":360,"title":{},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"controllers/ProjectsController.html":{}}}],["data')@apiresponse({status",{"_index":579,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["database",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["dataschema",{"_index":710,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["date",{"_index":176,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"entities/Project.html":{},"miscellaneous/typealiases.html":{}}}],["db",{"_index":408,"title":{},"body":{"controllers/HealthController.html":{}}}],["declarations",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"overview.html":{}}}],["decorators",{"_index":159,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResultDto.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"classes/UploadProjectDto.html":{}}}],["default",{"_index":325,"title":{},"body":{"controllers/ContextController.html":{},"entities/Project.html":{},"injectables/UtilService.html":{},"miscellaneous/typealiases.html":{}}}],["defaultsortby",{"_index":768,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{},"properties.html":{}}}],["delete",{"_index":586,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["delete(undefined.deleteproject)@apiresponse({status",{"_index":563,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["delete(urls.projects.deleteproject",{"_index":648,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["delimiter",{"_index":818,"title":{},"body":{"injectables/UtilService.html":{}}}],["dependencies",{"_index":73,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":946,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["desc",{"_index":769,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["description",{"_index":156,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"controllers/ContextController.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UploadProjectDto.html":{},"index.html":{},"properties.html":{}}}],["dest",{"_index":741,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["destination",{"_index":666,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["determines",{"_index":449,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["development",{"_index":998,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":225,"title":{},"body":{"controllers/CommandController.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/ProjectsController.html":{}}}],["diagramdto",{"_index":220,"title":{"classes/DiagramDto.html":{}},"body":{"controllers/CommandController.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/ProjectsController.html":{}}}],["disable",{"_index":286,"title":{},"body":{"modules/CommonModule.html":{},"injectables/UtilService.html":{}}}],["disableerrormessages",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["diskstorage",{"_index":610,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["dto",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["dto/command.dto",{"_index":239,"title":{},"body":{"controllers/CommandController.html":{}}}],["dto/context.dto",{"_index":340,"title":{},"body":{"controllers/ContextController.html":{}}}],["e",{"_index":686,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["e2e",{"_index":1009,"title":{},"body":{"index.html":{}}}],["early",{"_index":879,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["earlyhints",{"_index":878,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["efficient",{"_index":989,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":211,"title":{},"body":{"controllers/CommandController.html":{},"controllers/HealthController.html":{}}}],["engine",{"_index":223,"title":{},"body":{"controllers/CommandController.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/ProjectsController.html":{},"dependencies.html":{},"properties.html":{}}}],["engine(body.name",{"_index":257,"title":{},"body":{"controllers/CommandController.html":{}}}],["engine.dataschema",{"_index":694,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["engine.description",{"_index":644,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["engine.export(`${__dirname}/../../../public/projects",{"_index":646,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["engine.import(`${__dirname}/../../../public/projects/${project.enginefile",{"_index":641,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["engine.import(file.path",{"_index":685,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["engine.name",{"_index":642,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["engine.todiagram",{"_index":260,"title":{},"body":{"controllers/CommandController.html":{}}}],["engine.toobject",{"_index":706,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["engine_file",{"_index":510,"title":{},"body":{"entities/Project.html":{}}}],["enginedto",{"_index":218,"title":{"classes/EngineDto.html":{}},"body":{"controllers/CommandController.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/ProjectsController.html":{}}}],["enginedto.description",{"_index":715,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["enginedto.name",{"_index":713,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["enginedto.rules",{"_index":714,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["enginefile",{"_index":493,"title":{},"body":{"entities/Project.html":{},"controllers/ProjectsController.html":{},"classes/UploadProjectDto.html":{}}}],["engineobject",{"_index":385,"title":{},"body":{"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/ProjectsController.html":{}}}],["entities",{"_index":489,"title":{},"body":{"entities/Project.html":{},"overview.html":{}}}],["entities/project",{"_index":382,"title":{},"body":{"classes/CreateProjectDto.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/UploadProjectDto.html":{}}}],["entity",{"_index":488,"title":{"entities/Project.html":{}},"body":{"entities/Project.html":{},"miscellaneous/enumerations.html":{}}}],["entity('projects",{"_index":525,"title":{},"body":{"entities/Project.html":{}}}],["enum",{"_index":173,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["enumerations",{"_index":870,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":654,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["error",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CommandController.html":{},"miscellaneous/enumerations.html":{}}}],["error(`notfoundconfig",{"_index":308,"title":{},"body":{"injectables/ConfigService.html":{}}}],["eslint",{"_index":285,"title":{},"body":{"modules/CommonModule.html":{},"injectables/UtilService.html":{}}}],["eslint/no",{"_index":289,"title":{},"body":{"modules/CommonModule.html":{},"injectables/UtilService.html":{}}}],["examples",{"_index":191,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["exception",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{}}}],["exception.getresponse",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.stack",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["expectation",{"_index":938,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expectation_failed",{"_index":937,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["explicit",{"_index":821,"title":{},"body":{"injectables/UtilService.html":{}}}],["export",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArgumentInfoDto.html":{},"modules/BaseModule.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{}}}],["exportcontext",{"_index":598,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["exportcontext(body.context",{"_index":727,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["exportcontext(engine.dataschema",{"_index":697,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["exports",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/ProjectsModule.html":{},"overview.html":{}}}],["express",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"controllers/ContextController.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/RequestService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":577,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["extends",{"_index":296,"title":{},"body":{"injectables/ConfigService.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"classes/UpdateProjectDto.html":{}}}],["extension",{"_index":679,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["failed",{"_index":923,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["failed_dependency",{"_index":945,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["false",{"_index":317,"title":{},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"controllers/ProjectsController.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArgumentInfoDto.html":{},"modules/BaseModule.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{}}}],["file.endswith('.json",{"_index":351,"title":{},"body":{"controllers/ContextController.html":{}}}],["file.filename",{"_index":701,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["file.filename.split('.')[0",{"_index":693,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["file.originalname.split",{"_index":671,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["filecount",{"_index":352,"title":{},"body":{"controllers/ContextController.html":{}}}],["fileextension",{"_index":672,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["filefilter",{"_index":676,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["fileinterceptor",{"_index":605,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["fileinterceptor('file",{"_index":664,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["filename",{"_index":668,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["filenamesplit",{"_index":670,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["filenamesplit[filenamesplit.length",{"_index":673,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["filename}.json",{"_index":702,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["files",{"_index":346,"title":{},"body":{"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["files.filter((file",{"_index":350,"title":{},"body":{"controllers/ContextController.html":{}}}],["filesforpage",{"_index":356,"title":{},"body":{"controllers/ContextController.html":{}}}],["filesforpage.map(async",{"_index":359,"title":{},"body":{"controllers/ContextController.html":{}}}],["filter",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["filterablecolumns",{"_index":771,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["filteroperator",{"_index":757,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["filteroperator.eq",{"_index":772,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["filtersuffix",{"_index":758,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["filtersuffix.not",{"_index":773,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["findall",{"_index":532,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["findall(@paginate",{"_index":629,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["findall(query",{"_index":546,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["findone",{"_index":533,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["findone(@param('uuid",{"_index":632,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["findone(uuid",{"_index":550,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["folder",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["forbidden",{"_index":908,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["format",{"_index":662,"title":{},"body":{"controllers/ProjectsController.html":{},"properties.html":{}}}],["found",{"_index":635,"title":{},"body":{"controllers/ProjectsController.html":{},"miscellaneous/enumerations.html":{}}}],["framework",{"_index":987,"title":{},"body":{"index.html":{}}}],["fs",{"_index":339,"title":{},"body":{"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["fs.readdir(`${__dirname}/../../../public/static/contexts",{"_index":348,"title":{},"body":{"controllers/ContextController.html":{}}}],["fs.readfile(`${__dirname}/../../../public/static/contexts/${file",{"_index":361,"title":{},"body":{"controllers/ContextController.html":{}}}],["function",{"_index":183,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"controllers/HealthController.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":961,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":954,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gateway_timeout",{"_index":957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["generated",{"_index":227,"title":{},"body":{"controllers/CommandController.html":{}}}],["generating",{"_index":253,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ProjectsController.html":{}}}],["get('health",{"_index":410,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('health')@healthcheck",{"_index":394,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(path",{"_index":298,"title":{},"body":{"injectables/ConfigService.html":{}}}],["get(undefined.getcommands)@apiresponse({status",{"_index":208,"title":{},"body":{"controllers/CommandController.html":{}}}],["get(undefined.getcontext)@apiresponse({status",{"_index":554,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get(undefined.getdiagram)@apiresponse({status",{"_index":557,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get(undefined.getengine)@apiresponse({status",{"_index":560,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get(undefined.getproject",{"_index":551,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get(undefined.getstaticcontexts)@apiquery({name",{"_index":315,"title":{},"body":{"controllers/ContextController.html":{}}}],["get(undefined.listprojects)@paginatequeryoptions()@apipaginatedresponse(project",{"_index":548,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get(urls.context.getstaticcontexts",{"_index":343,"title":{},"body":{"controllers/ContextController.html":{}}}],["get(urls.engine.getcommands",{"_index":247,"title":{},"body":{"controllers/CommandController.html":{}}}],["get(urls.projects.getcontext",{"_index":720,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get(urls.projects.getdiagram",{"_index":729,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get(urls.projects.getengine",{"_index":704,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get(urls.projects.getproject",{"_index":631,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get(urls.projects.listprojects",{"_index":627,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["get>(path",{"_index":304,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcommands",{"_index":206,"title":{},"body":{"controllers/CommandController.html":{}}}],["getcommandsinfo",{"_index":235,"title":{},"body":{"controllers/CommandController.html":{}}}],["getcontext",{"_index":534,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getcontext(@param('uuid",{"_index":721,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getcontext(uuid",{"_index":553,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getdiagram",{"_index":535,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getdiagram(@param('uuid",{"_index":730,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getdiagram(uuid",{"_index":556,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getengine",{"_index":536,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getengine(@param('uuid",{"_index":705,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getengine(uuid",{"_index":559,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["getnextpage",{"_index":422,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["getpreviouspage",{"_index":423,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["getrequest",{"_index":780,"title":{},"body":{"injectables/RequestService.html":{}}}],["gets",{"_index":446,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["getstaticcontexts",{"_index":311,"title":{},"body":{"controllers/ContextController.html":{}}}],["getstaticcontexts(req",{"_index":312,"title":{},"body":{"controllers/ContextController.html":{}}}],["getting",{"_index":983,"title":{"index.html":{}},"body":{}}],["geturldiagram",{"_index":607,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["geturldiagram(engine.todiagram",{"_index":732,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["git+https://github.com/carlososuna11/business",{"_index":1052,"title":{},"body":{"properties.html":{}}}],["global",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{}}}],["gone",{"_index":919,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["gplv3",{"_index":1051,"title":{},"body":{"properties.html":{}}}],["graph",{"_index":1039,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1016,"title":{},"body":{"index.html":{}}}],["handle",{"_index":228,"title":{},"body":{"controllers/CommandController.html":{}}}],["handler",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["handling",{"_index":335,"title":{},"body":{"controllers/ContextController.html":{},"controllers/HealthController.html":{}}}],["hasnextpage",{"_index":424,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["haspreviouspage",{"_index":425,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["health",{"_index":393,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheck",{"_index":400,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":401,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":402,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":391,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{}}}],["healthindicatorresult",{"_index":403,"title":{},"body":{"controllers/HealthController.html":{}}}],["helmet",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"index.html":{}}}],["hints",{"_index":880,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["homepage",{"_index":1046,"title":{},"body":{"properties.html":{}}}],["host",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"entities/Project.html":{}}}],["host.switchtohttp",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host}${req.path",{"_index":368,"title":{},"body":{"controllers/ContextController.html":{}}}],["host}${this.getnextpage",{"_index":471,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["host}${this.getpreviouspage",{"_index":469,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["host}/public/contexts/${value",{"_index":528,"title":{},"body":{"entities/Project.html":{}}}],["host}/public/projects/${value",{"_index":527,"title":{},"body":{"entities/Project.html":{}}}],["host}/public/static/contexts/${file",{"_index":366,"title":{},"body":{"controllers/ContextController.html":{}}}],["http",{"_index":407,"title":{},"body":{"controllers/HealthController.html":{},"miscellaneous/enumerations.html":{}}}],["http://localhost:3000",{"_index":457,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"entities/Project.html":{}}}],["http_version_not_supported",{"_index":958,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["httpadapter",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpcode",{"_index":595,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["httpcode(httpstatus.created",{"_index":624,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":651,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["httpexception",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httphealthindicator",{"_index":404,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":193,"title":{},"body":{"modules/BaseModule.html":{}}}],["https://1.1.1.1",{"_index":413,"title":{},"body":{"controllers/HealthController.html":{}}}],["https://cdn.sheetjs.com/xlsx",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["https://docs.nestjs.com",{"_index":969,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://docs.nestjs.com/pipes#global",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/recipes/repl",{"_index":974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://docs.nestjs.com/recipes/router",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/recipes/serve",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/recipes/swagger",{"_index":982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://docs.nestjs.com/techniques/configuration",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/techniques/database",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/techniques/mvc",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["https://docs.nestjs.com/techniques/validation",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["https://github.com/carlososuna11/business",{"_index":1047,"title":{},"body":{"properties.html":{}}}],["https://github.com/nestjs/nest/issues/2249#issuecomment",{"_index":971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://github.com/nestjs/nest/tree/master/sample",{"_index":970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://nestjs.com",{"_index":1032,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/25421233",{"_index":830,"title":{},"body":{"injectables/UtilService.html":{}}}],["httpstatus",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["httpstatus.created",{"_index":622,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["httpstatus.internal_server_error",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.no_content",{"_index":649,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["httpstatus.ok",{"_index":249,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["i'm",{"_index":940,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["i_am_a_teapot",{"_index":939,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["id",{"_index":179,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["implemented",{"_index":952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["implements",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CommonModule.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"classes/UploadProjectDto.html":{}}}],["import",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArgumentInfoDto.html":{},"modules/BaseModule.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResultDto.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{}}}],["importcontext",{"_index":599,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["importcontext(`${__dirname}/../../../public/contexts",{"_index":711,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["imports",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/ProjectsModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["indicating",{"_index":399,"title":{},"body":{"controllers/HealthController.html":{}}}],["inestapplication",{"_index":977,"title":{},"body":{"miscellaneous/functions.html":{}}}],["infer",{"_index":307,"title":{},"body":{"injectables/ConfigService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArgumentInfoDto.html":{},"modules/BaseModule.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{}}}],["information",{"_index":213,"title":{},"body":{"controllers/CommandController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"miscellaneous/enumerations.html":{}}}],["inherited",{"_index":438,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["inject",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"injectables/RequestService.html":{}}}],["injectable",{"_index":293,"title":{"injectables/ConfigService.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"injectables/UtilService.html":{}},"body":{"injectables/ConfigService.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"injectables/UtilService.html":{}}}],["injectables",{"_index":294,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"injectables/UtilService.html":{},"overview.html":{}}}],["injectrepository",{"_index":756,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["injectrepository(project",{"_index":759,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["installation",{"_index":995,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":997,"title":{},"body":{"index.html":{}}}],["instance",{"_index":406,"title":{},"body":{"controllers/HealthController.html":{}}}],["instanceof",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["internal",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/enumerations.html":{}}}],["internal_server_error",{"_index":950,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid",{"_index":692,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["isarray",{"_index":209,"title":{},"body":{"controllers/CommandController.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{}}}],["iscomplete",{"_index":774,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["isglobal",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["iskeyofschema",{"_index":800,"title":{},"body":{"injectables/UtilService.html":{}}}],["iskeyofschema(key",{"_index":803,"title":{},"body":{"injectables/UtilService.html":{}}}],["isobject",{"_index":371,"title":{},"body":{"classes/ContextDto.html":{}}}],["isoptional",{"_index":157,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"classes/UploadProjectDto.html":{}}}],["isoptional()@isstring",{"_index":378,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UploadProjectDto.html":{}}}],["isstring",{"_index":380,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"classes/UploadProjectDto.html":{}}}],["isstring()@isoptional",{"_index":387,"title":{},"body":{"classes/EngineDto.html":{}}}],["isuuid",{"_index":796,"title":{},"body":{"classes/UploadProjectDto.html":{}}}],["items",{"_index":329,"title":{},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["join",{"_index":1023,"title":{},"body":{"index.html":{}}}],["join(delimiter",{"_index":825,"title":{},"body":{"injectables/UtilService.html":{}}}],["json",{"_index":617,"title":{},"body":{"controllers/ProjectsController.html":{},"dependencies.html":{},"properties.html":{}}}],["json.parse(context",{"_index":712,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["json.parse(data",{"_index":365,"title":{},"body":{"controllers/ContextController.html":{}}}],["json.parse(json.stringify(args",{"_index":831,"title":{},"body":{"injectables/UtilService.html":{}}}],["jsonfiles",{"_index":349,"title":{},"body":{"controllers/ContextController.html":{}}}],["jsonfiles.length",{"_index":353,"title":{},"body":{"controllers/ContextController.html":{}}}],["jsonfiles.slice((page",{"_index":357,"title":{},"body":{"controllers/ContextController.html":{}}}],["jsonschema7",{"_index":616,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["kamil",{"_index":1029,"title":{},"body":{"index.html":{}}}],["key",{"_index":805,"title":{},"body":{"injectables/UtilService.html":{}}}],["keyof",{"_index":828,"title":{},"body":{"injectables/UtilService.html":{}}}],["keywords",{"_index":1045,"title":{},"body":{"properties.html":{}}}],["large",{"_index":926,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["last",{"_index":767,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["legend",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"overview.html":{}}}],["length",{"_index":499,"title":{},"body":{"entities/Project.html":{},"miscellaneous/enumerations.html":{}}}],["length_required",{"_index":920,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["license",{"_index":1035,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1014,"title":{},"body":{"index.html":{}}}],["limit",{"_index":314,"title":{},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{}}}],["line",{"_index":288,"title":{},"body":{"modules/CommonModule.html":{},"injectables/UtilService.html":{}}}],["line(templatedata",{"_index":806,"title":{},"body":{"injectables/UtilService.html":{}}}],["list",{"_index":216,"title":{},"body":{"controllers/CommandController.html":{}}}],["literal",{"_index":1066,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["loading",{"_index":691,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["logger",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CommandController.html":{},"controllers/ProjectsController.html":{}}}],["logger.error(e",{"_index":687,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["logger.error(err",{"_index":655,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["logger.error(error",{"_index":261,"title":{},"body":{"controllers/CommandController.html":{}}}],["logger.error(exception",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["long",{"_index":929,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["many",{"_index":949,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matching",{"_index":69,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArgumentInfoDto.html":{},"modules/BaseModule.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["math.ceil(totalcount",{"_index":463,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["maxfilesizevalidator",{"_index":592,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["maximum",{"_index":432,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["maxsize",{"_index":683,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["media",{"_index":932,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["message",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["messages",{"_index":234,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/ProjectsController.html":{},"miscellaneous/enumerations.html":{}}}],["messages.created",{"_index":623,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["messages.no_content",{"_index":650,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["messages.ok",{"_index":250,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["metadata",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/enumerations.html":{}}}],["method_not_allowed",{"_index":910,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methods",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CommandController.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"injectables/UtilService.html":{}}}],["middleware",{"_index":284,"title":{},"body":{"modules/CommonModule.html":{},"miscellaneous/functions.html":{}}}],["middleware(app",{"_index":976,"title":{},"body":{"miscellaneous/functions.html":{}}}],["middlewareconsumer",{"_index":278,"title":{},"body":{"modules/CommonModule.html":{}}}],["miscellaneous",{"_index":869,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["misdirected",{"_index":942,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mit",{"_index":1013,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1002,"title":{},"body":{"index.html":{}}}],["modified",{"_index":897,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["module",{"_index":70,"title":{"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"modules/ProjectsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"modules/ProjectsModule.html":{},"overview.html":{}}}],["modules",{"_index":72,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BaseModule.html":{},"modules/CommonModule.html":{},"modules/ProjectsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1025,"title":{},"body":{"index.html":{}}}],["moved",{"_index":892,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["moved_permanently",{"_index":891,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["multer",{"_index":611,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["multermodule",{"_index":738,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["multermodule.register",{"_index":740,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["myśliwiec",{"_index":1030,"title":{},"body":{"index.html":{}}}],["n",{"_index":820,"title":{},"body":{"injectables/UtilService.html":{}}}],["name",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"classes/PaginatedResult.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":993,"title":{},"body":{"index.html":{}}}],["nestconfig",{"_index":297,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nestframework",{"_index":1034,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":604,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":194,"title":{},"body":{"modules/BaseModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/BaseModule.html":{},"controllers/CommandController.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/RequestService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":606,"title":{},"body":{"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":172,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"controllers/ContextController.html":{},"classes/PaginatedResultDto.html":{},"controllers/ProjectsController.html":{},"classes/UpdateProjectDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":196,"title":{},"body":{"modules/BaseModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"dependencies.html":{}}}],["nestmodule",{"_index":281,"title":{},"body":{"modules/CommonModule.html":{}}}],["new",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"controllers/ProjectsController.html":{}}}],["next",{"_index":287,"title":{},"body":{"modules/CommonModule.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"injectables/UtilService.html":{}}}],["no_content",{"_index":885,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["node.js",{"_index":986,"title":{},"body":{"index.html":{}}}],["non",{"_index":187,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"miscellaneous/enumerations.html":{}}}],["non_authoritative_information",{"_index":883,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_acceptable",{"_index":911,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_found",{"_index":909,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_implemented",{"_index":951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_modified",{"_index":896,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["notfoundexception",{"_index":587,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["notfoundexception('project",{"_index":634,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["npm",{"_index":996,"title":{},"body":{"index.html":{}}}],["null",{"_index":466,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"injectables/ProjectsService.html":{}}}],["nullable",{"_index":501,"title":{},"body":{"entities/Project.html":{}}}],["nullsort",{"_index":766,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["number",{"_index":174,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"miscellaneous/typealiases.html":{}}}],["number})@apiquery({name",{"_index":318,"title":{},"body":{"controllers/ContextController.html":{}}}],["number})@apiresponse({status",{"_index":319,"title":{},"body":{"controllers/ContextController.html":{}}}],["object",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"controllers/ProjectsController.html":{},"miscellaneous/typealiases.html":{}}}],["object.fromentries(object.entries(argv).filter",{"_index":832,"title":{},"body":{"injectables/UtilService.html":{}}}],["object.values(controllers",{"_index":198,"title":{},"body":{"modules/BaseModule.html":{}}}],["object.values(providers",{"_index":283,"title":{},"body":{"modules/CommonModule.html":{}}}],["objects",{"_index":474,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["objectype",{"_index":1063,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["ok",{"_index":881,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["omit",{"_index":377,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UploadProjectDto.html":{}}}],["open",{"_index":1015,"title":{},"body":{"index.html":{}}}],["operator",{"_index":184,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"miscellaneous/typealiases.html":{}}}],["optional",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["otherwise",{"_index":450,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["out",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"overview.html":{}}}],["output",{"_index":822,"title":{},"body":{"injectables/UtilService.html":{}}}],["override",{"_index":303,"title":{},"body":{"injectables/ConfigService.html":{}}}],["overview",{"_index":1040,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":299,"title":{},"body":{"injectables/ConfigService.html":{}}}],["package",{"_index":833,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":313,"title":{},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{}}}],["page=${this.page",{"_index":455,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["pages",{"_index":434,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["paginate",{"_index":603,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"dependencies.html":{}}}],["paginate(query",{"_index":763,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["paginated",{"_index":322,"title":{},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["paginatedresult",{"_index":331,"title":{"classes/PaginatedResult.html":{}},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["paginatedresult(contexts",{"_index":367,"title":{},"body":{"controllers/ContextController.html":{}}}],["paginatedresultdto",{"_index":320,"title":{"classes/PaginatedResultDto.html":{}},"body":{"controllers/ContextController.html":{},"classes/PaginatedResultDto.html":{}}}],["paginatequery",{"_index":547,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["paginatequeryoptions",{"_index":596,"title":{},"body":{"controllers/ProjectsController.html":{},"miscellaneous/functions.html":{}}}],["pagination",{"_index":327,"title":{"classes/Pagination.html":{}},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["pagination:11",{"_index":440,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["pagination:13",{"_index":444,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["pagination:15",{"_index":441,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["pagination:17",{"_index":443,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["pagination:7",{"_index":439,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["pagination:9",{"_index":442,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["papaparse",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":251,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"controllers/ProjectsController.html":{},"injectables/UtilService.html":{}}}],["param('uuid",{"_index":637,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["parameters",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CommandController.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["parsefilepipe",{"_index":591,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["parseuuidpipe",{"_index":588,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["partial",{"_index":889,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["partial_content",{"_index":888,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["partialtype",{"_index":789,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["partialtype(createprojectdto",{"_index":791,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["patch",{"_index":585,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["patch(undefined.updateproject",{"_index":574,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["patch(urls.projects.updateproject",{"_index":636,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["path",{"_index":301,"title":{},"body":{"injectables/ConfigService.html":{}}}],["pathvalue",{"_index":302,"title":{},"body":{"injectables/ConfigService.html":{}}}],["payload",{"_index":925,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payload_too_large",{"_index":924,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment",{"_index":907,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["payment_required",{"_index":906,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["per",{"_index":330,"title":{},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{}}}],["permanent",{"_index":902,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permanent_redirect",{"_index":901,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permanently",{"_index":893,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pg",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["pipes",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":1024,"title":{},"body":{"index.html":{}}}],["post",{"_index":233,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ProjectsController.html":{}}}],["post(undefined.createproject)@apiresponse({status",{"_index":543,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["post(undefined.setcontext)@apiresponse({status",{"_index":567,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["post(undefined.setengine)@apiresponse({status",{"_index":570,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["post(undefined.todiagram)@apiresponse({status",{"_index":219,"title":{},"body":{"controllers/CommandController.html":{}}}],["post(undefined.uploadproject)@apiconsumes('multipart/form",{"_index":578,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["post(urls.engine.todiagram",{"_index":254,"title":{},"body":{"controllers/CommandController.html":{}}}],["post(urls.projects.createproject",{"_index":621,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["post(urls.projects.setcontext",{"_index":723,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["post(urls.projects.setengine",{"_index":708,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["post(urls.projects.uploadproject",{"_index":660,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["pre",{"_index":801,"title":{},"body":{"injectables/UtilService.html":{}}}],["pre(templatedata",{"_index":811,"title":{},"body":{"injectables/UtilService.html":{}}}],["precondition",{"_index":922,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["precondition_failed",{"_index":921,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["precondition_required",{"_index":947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["previous",{"_index":420,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{}}}],["primarygeneratedcolumn",{"_index":522,"title":{},"body":{"entities/Project.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":517,"title":{},"body":{"entities/Project.html":{}}}],["private",{"_index":409,"title":{},"body":{"controllers/HealthController.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{}}}],["process.env.backend_host",{"_index":526,"title":{},"body":{"entities/Project.html":{}}}],["processing",{"_index":877,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["production",{"_index":1004,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["progressive",{"_index":985,"title":{},"body":{"index.html":{}}}],["project",{"_index":104,"title":{"entities/Project.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateProjectDto.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"classes/UploadProjectDto.html":{},"index.html":{}}}],["project.contextfile",{"_index":657,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["project.description",{"_index":645,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["project.dto",{"_index":790,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["project.dto.ts",{"_index":376,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{}}}],["project.dto.ts:12",{"_index":379,"title":{},"body":{"classes/CreateProjectDto.html":{},"classes/UploadProjectDto.html":{}}}],["project.dto.ts:16",{"_index":794,"title":{},"body":{"classes/UploadProjectDto.html":{}}}],["project.dto.ts:19",{"_index":793,"title":{},"body":{"classes/UploadProjectDto.html":{}}}],["project.dto.ts:6",{"_index":797,"title":{},"body":{"classes/UploadProjectDto.html":{}}}],["project.dto.ts:8",{"_index":381,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["project.dto.ts:9",{"_index":795,"title":{},"body":{"classes/UploadProjectDto.html":{}}}],["project.enginefile",{"_index":639,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["project.name",{"_index":643,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["project.uuid",{"_index":647,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["project.uuid}.json",{"_index":728,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["project.uuid}.tsbr",{"_index":719,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["project/dto",{"_index":242,"title":{},"body":{"controllers/CommandController.html":{}}}],["projectscontroller",{"_index":529,"title":{"controllers/ProjectsController.html":{}},"body":{"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{}}}],["projectscontroller.getcontext",{"_index":722,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["projectscontroller.getdiagram",{"_index":733,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["projectscontroller.getengine",{"_index":707,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["projectscontroller.remove",{"_index":656,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["projectscontroller.setengine",{"_index":716,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["projectscontroller.uploadfile",{"_index":688,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["projectsmodule",{"_index":83,"title":{"modules/ProjectsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"modules.html":{},"overview.html":{}}}],["projectsservice",{"_index":600,"title":{"injectables/ProjectsService.html":{}},"body":{"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"overview.html":{}}}],["project})@apibody({description",{"_index":580,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["project})@httpcode(httpstatus.created",{"_index":544,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["promise",{"_index":215,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"miscellaneous/functions.html":{}}}],["promise.all",{"_index":358,"title":{},"body":{"controllers/ContextController.html":{}}}],["promises",{"_index":338,"title":{},"body":{"controllers/ContextController.html":{}}}],["properties",{"_index":154,"title":{"properties.html":{}},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"classes/UploadProjectDto.html":{},"properties.html":{}}}],["protocols",{"_index":876,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["provide",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules/ProjectsModule.html":{},"overview.html":{}}}],["proxy",{"_index":914,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["proxy_authentication_required",{"_index":913,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["public",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{},"injectables/UtilService.html":{}}}],["query",{"_index":336,"title":{},"body":{"controllers/ContextController.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["query('limit",{"_index":345,"title":{},"body":{"controllers/ContextController.html":{}}}],["query('page",{"_index":344,"title":{},"body":{"controllers/ContextController.html":{}}}],["range",{"_index":935,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["read",{"_index":354,"title":{},"body":{"controllers/ContextController.html":{},"index.html":{}}}],["readonly",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{}}}],["record",{"_index":816,"title":{},"body":{"injectables/UtilService.html":{},"miscellaneous/typealiases.html":{}}}],["redirect",{"_index":900,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reflect",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["related",{"_index":229,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{}}}],["remove",{"_index":537,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["remove(@param('uuid",{"_index":652,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["remove(uuid",{"_index":562,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["removeundefined",{"_index":802,"title":{},"body":{"injectables/UtilService.html":{}}}],["removeundefined(argv",{"_index":813,"title":{},"body":{"injectables/UtilService.html":{}}}],["rename",{"_index":640,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["repository",{"_index":746,"title":{},"body":{"injectables/ProjectsService.html":{},"index.html":{},"properties.html":{}}}],["req",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["req.protocol}://${req.get('host",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"controllers/ContextController.html":{}}}],["request",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"controllers/ContextController.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{}}}],["request_timeout",{"_index":916,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requested",{"_index":934,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requested_range_not_satisfiable",{"_index":933,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requests",{"_index":231,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"miscellaneous/enumerations.html":{}}}],["requestservice",{"_index":778,"title":{"injectables/RequestService.html":{}},"body":{"injectables/RequestService.html":{}}}],["required",{"_index":316,"title":{},"body":{"controllers/ContextController.html":{},"miscellaneous/enumerations.html":{}}}],["reset",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["reset_content",{"_index":887,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resolve",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["resolves",{"_index":398,"title":{},"body":{"controllers/HealthController.html":{}}}],["response",{"_index":364,"title":{},"body":{"controllers/ContextController.html":{}}}],["responsebody",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["responsible",{"_index":334,"title":{},"body":{"controllers/ContextController.html":{}}}],["result",{"_index":323,"title":{},"body":{"controllers/ContextController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["results",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArgumentInfoDto.html":{},"modules/BaseModule.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["retrieve",{"_index":212,"title":{},"body":{"controllers/CommandController.html":{}}}],["retrieving",{"_index":481,"title":{},"body":{"classes/Pagination.html":{}}}],["return",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"injectables/UtilService.html":{}}}],["returned",{"_index":431,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["returns",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CommandController.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"injectables/UtilService.html":{},"miscellaneous/functions.html":{}}}],["returntype",{"_index":190,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["rootpath",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["router",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["rule",{"_index":1044,"title":{},"body":{"properties.html":{}}}],["ruleobject",{"_index":386,"title":{},"body":{"classes/DiagramDto.html":{},"classes/EngineDto.html":{}}}],["rules",{"_index":224,"title":{},"body":{"controllers/CommandController.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/ProjectsController.html":{},"dependencies.html":{},"properties.html":{}}}],["run",{"_index":999,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["satisfiable",{"_index":936,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scalable",{"_index":990,"title":{},"body":{"index.html":{}}}],["schema",{"_index":582,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/UtilService.html":{},"dependencies.html":{}}}],["scope",{"_index":784,"title":{},"body":{"injectables/RequestService.html":{}}}],["scope.request",{"_index":785,"title":{},"body":{"injectables/RequestService.html":{}}}],["scoped",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["searchablecolumns",{"_index":770,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["see",{"_index":895,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["see_other",{"_index":894,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["serveroot",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/enumerations.html":{}}}],["service_unavailable",{"_index":955,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["services",{"_index":282,"title":{},"body":{"modules/CommonModule.html":{}}}],["services/project.service",{"_index":601,"title":{},"body":{"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{}}}],["set",{"_index":177,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"miscellaneous/typealiases.html":{}}}],["setcontext",{"_index":538,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["setcontext(@param('uuid",{"_index":724,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["setcontext(uuid",{"_index":566,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["setengine",{"_index":539,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["setengine(@param('uuid",{"_index":709,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["setengine(uuid",{"_index":569,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["setupswagger",{"_index":966,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setupswagger(app",{"_index":981,"title":{},"body":{"miscellaneous/functions.html":{}}}],["side",{"_index":991,"title":{},"body":{"index.html":{}}}],["situations",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["skipped",{"_index":436,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["skippeditems",{"_index":418,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["sortablecolumns",{"_index":765,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArgumentInfoDto.html":{},"modules/BaseModule.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/HealthController.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"modules/ProjectsModule.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UpdateProjectDto.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{},"index.html":{}}}],["specified",{"_index":333,"title":{},"body":{"controllers/ContextController.html":{}}}],["sponsors",{"_index":1018,"title":{},"body":{"index.html":{}}}],["sqema",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["src/.../app.middleware.ts",{"_index":964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../app.ts",{"_index":962,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../config.interface.ts",{"_index":1062,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../decorators.ts",{"_index":965,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":1057,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../messages.ts",{"_index":871,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../repl.ts",{"_index":963,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.ts",{"_index":967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../util.service.ts",{"_index":1064,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.middleware.ts",{"_index":975,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.ts",{"_index":968,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/base/base.module.ts",{"_index":192,"title":{},"body":{"modules/BaseModule.html":{}}}],["src/base/controllers/context.controller.ts",{"_index":310,"title":{},"body":{"controllers/ContextController.html":{}}}],["src/base/controllers/context.controller.ts:31",{"_index":321,"title":{},"body":{"controllers/ContextController.html":{}}}],["src/base/controllers/engine.controller.ts",{"_index":204,"title":{},"body":{"controllers/CommandController.html":{}}}],["src/base/controllers/engine.controller.ts:27",{"_index":210,"title":{},"body":{"controllers/CommandController.html":{}}}],["src/base/controllers/engine.controller.ts:44",{"_index":221,"title":{},"body":{"controllers/CommandController.html":{}}}],["src/base/controllers/health.controller.ts",{"_index":392,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/base/controllers/health.controller.ts:34",{"_index":395,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/base/dto/command.dto.ts",{"_index":153,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["src/base/dto/command.dto.ts:102",{"_index":270,"title":{},"body":{"classes/CommandInfoDto.html":{}}}],["src/base/dto/command.dto.ts:14",{"_index":167,"title":{},"body":{"classes/ArgumentInfoDto.html":{}}}],["src/base/dto/command.dto.ts:20",{"_index":162,"title":{},"body":{"classes/ArgumentInfoDto.html":{}}}],["src/base/dto/command.dto.ts:26",{"_index":169,"title":{},"body":{"classes/ArgumentInfoDto.html":{}}}],["src/base/dto/command.dto.ts:34",{"_index":200,"title":{},"body":{"classes/CategoryInfoDto.html":{}}}],["src/base/dto/command.dto.ts:40",{"_index":201,"title":{},"body":{"classes/CategoryInfoDto.html":{}}}],["src/base/dto/command.dto.ts:46",{"_index":199,"title":{},"body":{"classes/CategoryInfoDto.html":{}}}],["src/base/dto/command.dto.ts:54",{"_index":271,"title":{},"body":{"classes/CommandInfoDto.html":{}}}],["src/base/dto/command.dto.ts:60",{"_index":272,"title":{},"body":{"classes/CommandInfoDto.html":{}}}],["src/base/dto/command.dto.ts:66",{"_index":274,"title":{},"body":{"classes/CommandInfoDto.html":{}}}],["src/base/dto/command.dto.ts:72",{"_index":268,"title":{},"body":{"classes/CommandInfoDto.html":{}}}],["src/base/dto/command.dto.ts:78",{"_index":269,"title":{},"body":{"classes/CommandInfoDto.html":{}}}],["src/base/dto/command.dto.ts:8",{"_index":171,"title":{},"body":{"classes/ArgumentInfoDto.html":{}}}],["src/base/dto/command.dto.ts:84",{"_index":267,"title":{},"body":{"classes/CommandInfoDto.html":{}}}],["src/base/dto/command.dto.ts:90",{"_index":266,"title":{},"body":{"classes/CommandInfoDto.html":{}}}],["src/base/dto/command.dto.ts:96",{"_index":273,"title":{},"body":{"classes/CommandInfoDto.html":{}}}],["src/base/dto/context.dto.ts",{"_index":472,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/base/dto/context.dto.ts:14",{"_index":477,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/base/dto/context.dto.ts:20",{"_index":475,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/base/dto/context.dto.ts:26",{"_index":479,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/base/dto/context.dto.ts:32",{"_index":476,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/base/dto/context.dto.ts:38",{"_index":478,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/base/dto/context.dto.ts:8",{"_index":473,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/common/common.module.ts",{"_index":275,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/common.module.ts:15",{"_index":279,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/filters/exceptions.filter.ts",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/filters/exceptions.filter.ts:6",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/filters/exceptions.filter.ts:9",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/providers/config.service.ts",{"_index":295,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/common/providers/config.service.ts:8",{"_index":300,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/common/providers/requests.service.ts",{"_index":779,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/common/providers/requests.service.ts:6",{"_index":782,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/common/providers/requests.service.ts:9",{"_index":783,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/common/providers/util.service.ts",{"_index":799,"title":{},"body":{"injectables/UtilService.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/providers/util.service.ts:24",{"_index":812,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/providers/util.service.ts:28",{"_index":809,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/providers/util.service.ts:32",{"_index":804,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/providers/util.service.ts:36",{"_index":814,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/providers/util.service.ts:8",{"_index":819,"title":{},"body":{"injectables/UtilService.html":{}}}],["src/common/utils/pagination/decorators.ts",{"_index":979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/common/utils/pagination/paginate.ts",{"_index":415,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["src/common/utils/pagination/paginate.ts:11",{"_index":483,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/pagination/paginate.ts:13",{"_index":487,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/pagination/paginate.ts:15",{"_index":484,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/pagination/paginate.ts:17",{"_index":486,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/pagination/paginate.ts:26",{"_index":437,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:28",{"_index":435,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:34",{"_index":448,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:42",{"_index":451,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:50",{"_index":445,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:58",{"_index":447,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:60",{"_index":428,"title":{},"body":{"classes/PaginatedResult.html":{}}}],["src/common/utils/pagination/paginate.ts:7",{"_index":482,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/pagination/paginate.ts:9",{"_index":485,"title":{},"body":{"classes/Pagination.html":{}}}],["src/common/utils/response/messages.ts",{"_index":872,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/config/config.interface.ts",{"_index":1067,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/entities/project/project.entity.ts",{"_index":490,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project/project.entity.ts:12",{"_index":509,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project/project.entity.ts:22",{"_index":511,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project/project.entity.ts:32",{"_index":503,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project/project.entity.ts:35",{"_index":507,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project/project.entity.ts:38",{"_index":516,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project/project.entity.ts:6",{"_index":518,"title":{},"body":{"entities/Project.html":{}}}],["src/entities/project/project.entity.ts:9",{"_index":513,"title":{},"body":{"entities/Project.html":{}}}],["src/project/controllers/project.controller.ts",{"_index":530,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/controllers/project.controller.ts:160",{"_index":584,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/controllers/project.controller.ts:209",{"_index":561,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/controllers/project.controller.ts:243",{"_index":571,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/controllers/project.controller.ts:279",{"_index":555,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/controllers/project.controller.ts:303",{"_index":568,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/controllers/project.controller.ts:336",{"_index":558,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/controllers/project.controller.ts:50",{"_index":545,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/controllers/project.controller.ts:58",{"_index":549,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/controllers/project.controller.ts:63",{"_index":552,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/controllers/project.controller.ts:72",{"_index":575,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/controllers/project.controller.ts:96",{"_index":565,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["src/project/dto/context.dto.ts",{"_index":370,"title":{},"body":{"classes/ContextDto.html":{}}}],["src/project/dto/context.dto.ts:5",{"_index":372,"title":{},"body":{"classes/ContextDto.html":{}}}],["src/project/dto/create",{"_index":375,"title":{},"body":{"classes/CreateProjectDto.html":{}}}],["src/project/dto/engine.dto.ts",{"_index":383,"title":{},"body":{"classes/DiagramDto.html":{},"classes/EngineDto.html":{}}}],["src/project/dto/engine.dto.ts:11",{"_index":388,"title":{},"body":{"classes/EngineDto.html":{}}}],["src/project/dto/engine.dto.ts:14",{"_index":390,"title":{},"body":{"classes/EngineDto.html":{}}}],["src/project/dto/engine.dto.ts:19",{"_index":384,"title":{},"body":{"classes/DiagramDto.html":{}}}],["src/project/dto/engine.dto.ts:7",{"_index":389,"title":{},"body":{"classes/EngineDto.html":{}}}],["src/project/dto/update",{"_index":788,"title":{},"body":{"classes/UpdateProjectDto.html":{}}}],["src/project/dto/upload",{"_index":792,"title":{},"body":{"classes/UploadProjectDto.html":{}}}],["src/project/project.module.ts",{"_index":736,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["src/project/services/project.service.ts",{"_index":743,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/project/services/project.service.ts:15",{"_index":755,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/project/services/project.service.ts:20",{"_index":749,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/project/services/project.service.ts:25",{"_index":750,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/project/services/project.service.ts:38",{"_index":751,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/project/services/project.service.ts:42",{"_index":753,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/project/services/project.service.ts:50",{"_index":752,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/project/services/project.service.ts:9",{"_index":747,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["src/repl.ts",{"_index":973,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/swagger.ts",{"_index":980,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/types/index.ts",{"_index":1065,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["start",{"_index":1000,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1003,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1005,"title":{},"body":{"index.html":{}}}],["started",{"_index":984,"title":{"index.html":{}},"body":{}}],["starter",{"_index":994,"title":{},"body":{"index.html":{}}}],["static",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/ContextController.html":{},"dependencies.html":{}}}],["status",{"_index":248,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/HealthController.html":{},"controllers/ProjectsController.html":{}}}],["statuscode",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["stay",{"_index":1026,"title":{},"body":{"index.html":{}}}],["storage",{"_index":665,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["string",{"_index":158,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{},"miscellaneous/typealiases.html":{}}}],["string(exception",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["subset",{"_index":416,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["super",{"_index":458,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["super.get(path",{"_index":306,"title":{},"body":{"injectables/ConfigService.html":{}}}],["support",{"_index":1019,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supported",{"_index":960,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["svg",{"_index":1037,"title":{},"body":{"modules.html":{}}}],["switching",{"_index":875,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["switching_protocols",{"_index":874,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["t",{"_index":427,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"injectables/UtilService.html":{}}}],["teapot",{"_index":941,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["template",{"_index":453,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"injectables/UtilService.html":{}}}],["template(templatedata",{"_index":817,"title":{},"body":{"injectables/UtilService.html":{}}}],["templatedata",{"_index":810,"title":{},"body":{"injectables/UtilService.html":{}}}],["templateparameter",{"_index":808,"title":{},"body":{"injectables/UtilService.html":{},"miscellaneous/typealiases.html":{}}}],["templatestringsarray",{"_index":807,"title":{},"body":{"injectables/UtilService.html":{}}}],["temporary",{"_index":899,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["temporary_redirect",{"_index":898,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["terminusmodule",{"_index":195,"title":{},"body":{"modules/BaseModule.html":{}}}],["test",{"_index":1008,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1012,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1010,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1007,"title":{},"body":{"index.html":{}}}],["text",{"_index":508,"title":{},"body":{"entities/Project.html":{}}}],["text.replace(/^\\s+/gm",{"_index":824,"title":{},"body":{"injectables/UtilService.html":{}}}],["thanks",{"_index":1017,"title":{},"body":{"index.html":{}}}],["this.data",{"_index":459,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.db.pingcheck('database",{"_index":414,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.hasnextpage",{"_index":470,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.haspreviouspage",{"_index":468,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.health.check",{"_index":411,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck('dns",{"_index":412,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpadapterhost",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.limit",{"_index":460,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.next",{"_index":467,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.page",{"_index":454,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.previous",{"_index":465,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.projectsservice.create(body",{"_index":626,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findall(query",{"_index":630,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.findone(uuid",{"_index":633,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.remove(uuid",{"_index":659,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.update(uuid",{"_index":638,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.projectsservice.upload(uploaddata",{"_index":703,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["this.repository",{"_index":764,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.repository.create(createprojectdto",{"_index":762,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.repository.create(uploadprojectdto",{"_index":760,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.repository.delete(uuid",{"_index":777,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.repository.findoneby",{"_index":775,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.repository.save",{"_index":776,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.repository.save(project",{"_index":761,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["this.request",{"_index":787,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.skippeditems",{"_index":464,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.template(templatedata",{"_index":827,"title":{},"body":{"injectables/UtilService.html":{}}}],["this.totalcount",{"_index":461,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["this.totalpages",{"_index":462,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["throw",{"_index":263,"title":{},"body":{"controllers/CommandController.html":{},"injectables/ConfigService.html":{},"controllers/ProjectsController.html":{}}}],["throws",{"_index":252,"title":{},"body":{"controllers/CommandController.html":{}}}],["thus",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["timeout",{"_index":917,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["timestamp",{"_index":505,"title":{},"body":{"entities/Project.html":{}}}],["todiagram",{"_index":207,"title":{},"body":{"controllers/CommandController.html":{}}}],["todiagram(@body",{"_index":255,"title":{},"body":{"controllers/CommandController.html":{}}}],["todiagram(body",{"_index":217,"title":{},"body":{"controllers/CommandController.html":{}}}],["too_many_requests",{"_index":948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["total",{"_index":433,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{}}}],["totalcount",{"_index":421,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{}}}],["totalpages",{"_index":419,"title":{},"body":{"classes/PaginatedResult.html":{},"classes/Pagination.html":{}}}],["touch",{"_index":1027,"title":{},"body":{"index.html":{}}}],["traceback",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["transform",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"entities/Project.html":{}}}],["transformer",{"_index":519,"title":{},"body":{"entities/Project.html":{},"dependencies.html":{}}}],["trim",{"_index":826,"title":{},"body":{"injectables/UtilService.html":{}}}],["true",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"controllers/CommandController.html":{},"injectables/ConfigService.html":{},"classes/PaginatedResult.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{}}}],["true})@transform",{"_index":502,"title":{},"body":{"entities/Project.html":{}}}],["try",{"_index":256,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ProjectsController.html":{}}}],["tsbr",{"_index":581,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["twitter",{"_index":1033,"title":{},"body":{"index.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"modules/CommonModule.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{},"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"injectables/RequestService.html":{},"classes/UploadProjectDto.html":{},"injectables/UtilService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1054,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":829,"title":{},"body":{"injectables/UtilService.html":{}}}],["typeorm",{"_index":524,"title":{},"body":{"entities/Project.html":{},"injectables/ProjectsService.html":{},"dependencies.html":{}}}],["typeormhealthindicator",{"_index":405,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{}}}],["typeormmodule.forfeature([project",{"_index":739,"title":{},"body":{"modules/ProjectsModule.html":{}}}],["typeormmodule.forrootasync",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":164,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["typescript",{"_index":243,"title":{},"body":{"controllers/CommandController.html":{},"modules/CommonModule.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"controllers/ProjectsController.html":{},"injectables/UtilService.html":{},"dependencies.html":{},"index.html":{},"properties.html":{}}}],["unauthorized",{"_index":905,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unavailable",{"_index":956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":161,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"controllers/CommandController.html":{},"classes/CommandInfoDto.html":{},"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"classes/PaginatedResultDto.html":{},"controllers/ProjectsController.html":{},"injectables/UtilService.html":{}}}],["undefined})@httpcode(httpstatus.no_content",{"_index":564,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["undefined})@useinterceptors(undefined)@httpcode(httpstatus.created",{"_index":583,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["unit",{"_index":1006,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{},"injectables/UtilService.html":{},"miscellaneous/typealiases.html":{}}}],["unlink",{"_index":614,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["unlink(`${__dirname}/../../../public/projects/${project.contextfile",{"_index":658,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["unlink(`${__dirname}/../../../public/projects/${project.enginefile",{"_index":653,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["unlink(file.path",{"_index":689,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["unprocessable",{"_index":944,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unprocessable_entity",{"_index":943,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unsupported",{"_index":931,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unsupported_media_type",{"_index":930,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unsupportedmediatypeexception",{"_index":594,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["unsupportedmediatypeexception('file",{"_index":678,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["untitled",{"_index":700,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["unused",{"_index":290,"title":{},"body":{"modules/CommonModule.html":{}}}],["update",{"_index":540,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["update(uuid",{"_index":572,"title":{},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{}}}],["updated_at",{"_index":515,"title":{},"body":{"entities/Project.html":{}}}],["updatedat",{"_index":494,"title":{},"body":{"entities/Project.html":{},"injectables/ProjectsService.html":{}}}],["updatedatecolumn",{"_index":523,"title":{},"body":{"entities/Project.html":{}}}],["updatedatecolumn({type",{"_index":514,"title":{},"body":{"entities/Project.html":{}}}],["updateprojectdto",{"_index":573,"title":{"classes/UpdateProjectDto.html":{}},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UpdateProjectDto.html":{}}}],["upload",{"_index":744,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["upload(uploadprojectdto",{"_index":754,"title":{},"body":{"injectables/ProjectsService.html":{}}}],["uploaddata",{"_index":699,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["uploadedfile",{"_index":590,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["uploadfile",{"_index":541,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["uploadfile(file",{"_index":576,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["uploadprojectdto",{"_index":602,"title":{"classes/UploadProjectDto.html":{}},"body":{"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UploadProjectDto.html":{}}}],["uri",{"_index":928,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uri_too_long",{"_index":927,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["url",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"classes/PaginatedResult.html":{},"classes/PaginatedResultDto.html":{},"classes/Pagination.html":{}}}],["urls",{"_index":237,"title":{},"body":{"controllers/CommandController.html":{},"controllers/ContextController.html":{},"controllers/ProjectsController.html":{}}}],["useclass",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["useinterceptors",{"_index":589,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":620,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["usevalue",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["utf",{"_index":362,"title":{},"body":{"controllers/ContextController.html":{}}}],["utilservice",{"_index":798,"title":{"injectables/UtilService.html":{}},"body":{"injectables/UtilService.html":{}}}],["uuid",{"_index":495,"title":{},"body":{"entities/Project.html":{},"controllers/ProjectsController.html":{},"injectables/ProjectsService.html":{},"classes/UploadProjectDto.html":{}}}],["uuidv4",{"_index":613,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["uuidv4()}.${fileextension",{"_index":675,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["v4",{"_index":612,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["valid",{"_index":680,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["validation",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["validationpipe",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":373,"title":{},"body":{"classes/ContextDto.html":{},"classes/CreateProjectDto.html":{},"classes/DiagramDto.html":{},"classes/EngineDto.html":{},"classes/UploadProjectDto.html":{},"dependencies.html":{}}}],["validators",{"_index":682,"title":{},"body":{"controllers/ProjectsController.html":{}}}],["value",{"_index":305,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/ContextController.html":{},"entities/Project.html":{},"injectables/UtilService.html":{},"miscellaneous/enumerations.html":{}}}],["varchar",{"_index":497,"title":{},"body":{"entities/Project.html":{}}}],["variable",{"_index":186,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["vars",{"_index":291,"title":{},"body":{"modules/CommonModule.html":{}}}],["version",{"_index":959,"title":{},"body":{"miscellaneous/enumerations.html":{},"properties.html":{}}}],["void",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CommonModule.html":{},"miscellaneous/typealiases.html":{}}}],["watch",{"_index":1001,"title":{},"body":{"index.html":{}}}],["website",{"_index":1031,"title":{},"body":{"index.html":{}}}],["whether",{"_index":170,"title":{},"body":{"classes/ArgumentInfoDto.html":{},"classes/CategoryInfoDto.html":{},"classes/CommandInfoDto.html":{}}}],["whitelist",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["xlsx",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["you'd",{"_index":1022,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/ProjectsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exceptions.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/common/filters/exceptions.filter.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/exceptions.filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException, HttpStatus } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { Logger } from '@nestjs/common';\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n\tconstructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n\tcatch(exception: unknown, host: ArgumentsHost): void {\n\t\t// In certain situations `httpAdapter` might not be available in the\n\t\t// constructor method, thus we should resolve it here.\n\t\tconst { httpAdapter } = this.httpAdapterHost;\n\n\t\tconst ctx = host.switchToHttp();\n\n\t\tconst httpStatus = exception instanceof HttpException ? exception.getStatus() : HttpStatus.INTERNAL_SERVER_ERROR;\n\n\t\tconst responseBody =\n\t\t\texception instanceof HttpException\n\t\t\t\t? exception.getResponse()\n\t\t\t\t: { statusCode: httpStatus, message: 'Internal Server Error' };\n\n\t\t// console all exception traceback\n\t\tLogger.error(exception instanceof Error ? exception.stack : String(exception), 'Exception Handler');\n\n\t\thttpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nBaseModule\n\nBaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBaseModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nAppModule -->\n\nProjectsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BaseModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            ProjectsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, ValidationPipe } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_FILTER, APP_PIPE } from '@nestjs/core';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\n\nimport { CommonModule, AllExceptionsFilter } from './common';\nimport { configuration } from './config';\nimport { ProjectsModule } from './project';\nimport { BaseModule } from './base';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\n@Module({\n\timports: [\n\t\t// Configuration\n\t\t// https://docs.nestjs.com/techniques/configuration\n\t\tConfigModule.forRoot({\n\t\t\tisGlobal: true,\n\t\t\tload: [configuration],\n\t\t}),\n\t\t// Database\n\t\t// https://docs.nestjs.com/techniques/database\n\t\tTypeOrmModule.forRootAsync({\n\t\t\tuseFactory: (config: ConfigService) => ({\n\t\t\t\t...config.get('db'),\n\t\t\t}),\n\t\t\tinject: [ConfigService],\n\t\t}),\n\t\t// Static Folder\n\t\t// https://docs.nestjs.com/recipes/serve-static\n\t\t// https://docs.nestjs.com/techniques/mvc\n\t\tServeStaticModule.forRoot({\n\t\t\trootPath: `${__dirname}/../public`,\n\t\t\tserveRoot: '/public/',\n\t\t}),\n\t\t// Service Modules\n\t\tCommonModule,\n\t\tBaseModule,\n\t\tProjectsModule,\n\t\t// Global\n\t\t// Module Router\n\t\t// https://docs.nestjs.com/recipes/router-module\n\t],\n\tproviders: [\n\t\t// Global Filter, Exception check\n\t\t{ provide: APP_FILTER, useClass: AllExceptionsFilter },\n\t\t// Global Pipe, Validation check\n\t\t// https://docs.nestjs.com/pipes#global-scoped-pipes\n\t\t// https://docs.nestjs.com/techniques/validation\n\t\t{\n\t\t\tprovide: APP_PIPE,\n\t\t\tuseValue: new ValidationPipe({\n\t\t\t\t// disableErrorMessages: true,\n\t\t\t\ttransform: true, // transform object to DTO class\n\t\t\t\twhitelist: true,\n\t\t\t}),\n\t\t},\n\t\t// REQUEST URL BASE\n\t\t{\n\t\t\tprovide: 'HOST',\n\t\t\tuseFactory: (req: Request) => {\n\t\t\t\tconst host = `${req.protocol}://${req.get('Host')}`;\n\t\t\t\treturn host;\n\t\t\t},\n\t\t\tinject: [REQUEST],\n\t\t},\n\t],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArgumentInfoDto.html":{"url":"classes/ArgumentInfoDto.html","title":"class - ArgumentInfoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArgumentInfoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/dto/command.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                acceptedTypes\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isOptional\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        acceptedTypes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:20\n                        \n                    \n\n            \n                \n                    The accepted types of the argument.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:14\n                        \n                    \n\n            \n                \n                    The description of the argument.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isOptional\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:26\n                        \n                    \n\n            \n                \n                    Whether the argument is optional or not.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:8\n                        \n                    \n\n            \n                \n                    The name of the argument.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ArgumentInfoDto {\n\t/**\n\t * The name of the argument.\n\t */\n\t@ApiProperty()\n\tname: string;\n\n\t/**\n\t * The description of the argument.\n\t */\n\t@ApiProperty()\n\tdescription: string;\n\n\t/**\n\t * The accepted types of the argument.\n\t */\n\t@ApiProperty({ enum: ['string', 'number', 'boolean', 'object', 'array', 'unknown', 'date', 'set'] })\n\tacceptedTypes: string[];\n\n\t/**\n\t * Whether the argument is optional or not.\n\t */\n\t@ApiProperty()\n\tisOptional: boolean;\n}\n\nexport class CategoryInfoDto {\n\t/**\n\t * The id of the category.\n\t */\n\t@ApiProperty()\n\tid: string;\n\n\t/**\n\t * The name of the category.\n\t */\n\t@ApiProperty()\n\tname: string;\n\n\t/**\n\t * The description of the category.\n\t */\n\t@ApiProperty()\n\tdescription: string;\n}\n\nexport class CommandInfoDto {\n\t/**\n\t * The id of the command.\n\t */\n\t@ApiProperty()\n\tid: string;\n\n\t/**\n\t * The name of the command.\n\t */\n\t@ApiProperty()\n\tname: string;\n\n\t/**\n\t * The type of the command.\n\t */\n\t@ApiProperty({ enum: ['function', 'operator', 'context'] })\n\ttype: string;\n\n\t/**\n\t * The category of the command.\n\t */\n\t@ApiProperty()\n\tcategory: CategoryInfoDto;\n\n\t/**\n\t * The description of the command.\n\t */\n\t@ApiProperty()\n\tdescription: string;\n\n\t/**\n\t * The argument type of the command.\n\t */\n\t@ApiProperty({ enum: ['variable', 'non-variable'] })\n\targumentType: string;\n\n\t/**\n\t * The arguments of the command.\n\t */\n\t@ApiProperty({ type: [ArgumentInfoDto] })\n\targuments: ArgumentInfoDto[] | ArgumentInfoDto;\n\n\t/**\n\t * The return type of the command.\n\t */\n\t@ApiProperty({ enum: ['string', 'number', 'boolean', 'object', 'array', 'unknown', 'date', 'set'] })\n\treturnType: string;\n\n\t/**\n\t * The examples of the command.\n\t */\n\t@ApiProperty({ type: [String] })\n\texamples: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BaseModule.html":{"url":"modules/BaseModule.html","title":"module - BaseModule","body":"\n                   \n\n\n\n\n    Modules\n    BaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/base/base.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\n\nimport * as controllers from './controllers';\n@Module({\n\timports: [TerminusModule, HttpModule],\n\tcontrollers: Object.values(controllers),\n})\nexport class BaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CategoryInfoDto.html":{"url":"classes/CategoryInfoDto.html","title":"class - CategoryInfoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CategoryInfoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/dto/command.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:46\n                        \n                    \n\n            \n                \n                    The description of the category.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:34\n                        \n                    \n\n            \n                \n                    The id of the category.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:40\n                        \n                    \n\n            \n                \n                    The name of the category.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ArgumentInfoDto {\n\t/**\n\t * The name of the argument.\n\t */\n\t@ApiProperty()\n\tname: string;\n\n\t/**\n\t * The description of the argument.\n\t */\n\t@ApiProperty()\n\tdescription: string;\n\n\t/**\n\t * The accepted types of the argument.\n\t */\n\t@ApiProperty({ enum: ['string', 'number', 'boolean', 'object', 'array', 'unknown', 'date', 'set'] })\n\tacceptedTypes: string[];\n\n\t/**\n\t * Whether the argument is optional or not.\n\t */\n\t@ApiProperty()\n\tisOptional: boolean;\n}\n\nexport class CategoryInfoDto {\n\t/**\n\t * The id of the category.\n\t */\n\t@ApiProperty()\n\tid: string;\n\n\t/**\n\t * The name of the category.\n\t */\n\t@ApiProperty()\n\tname: string;\n\n\t/**\n\t * The description of the category.\n\t */\n\t@ApiProperty()\n\tdescription: string;\n}\n\nexport class CommandInfoDto {\n\t/**\n\t * The id of the command.\n\t */\n\t@ApiProperty()\n\tid: string;\n\n\t/**\n\t * The name of the command.\n\t */\n\t@ApiProperty()\n\tname: string;\n\n\t/**\n\t * The type of the command.\n\t */\n\t@ApiProperty({ enum: ['function', 'operator', 'context'] })\n\ttype: string;\n\n\t/**\n\t * The category of the command.\n\t */\n\t@ApiProperty()\n\tcategory: CategoryInfoDto;\n\n\t/**\n\t * The description of the command.\n\t */\n\t@ApiProperty()\n\tdescription: string;\n\n\t/**\n\t * The argument type of the command.\n\t */\n\t@ApiProperty({ enum: ['variable', 'non-variable'] })\n\targumentType: string;\n\n\t/**\n\t * The arguments of the command.\n\t */\n\t@ApiProperty({ type: [ArgumentInfoDto] })\n\targuments: ArgumentInfoDto[] | ArgumentInfoDto;\n\n\t/**\n\t * The return type of the command.\n\t */\n\t@ApiProperty({ enum: ['string', 'number', 'boolean', 'object', 'array', 'unknown', 'date', 'set'] })\n\treturnType: string;\n\n\t/**\n\t * The examples of the command.\n\t */\n\t@ApiProperty({ type: [String] })\n\texamples: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CommandController.html":{"url":"controllers/CommandController.html","title":"controller - CommandController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CommandController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/controllers/engine.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getCommands\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                toDiagram\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        getCommands\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCommands()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(undefined.getCommands)@ApiResponse({status: undefined, description: undefined, type: CommandInfoDto, isArray: true})\n                \n            \n\n            \n                \n                    Defined in src/base/controllers/engine.controller.ts:27\n                \n            \n\n\n            \n                \n                    Endpoint to retrieve information about available commands.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        List of available commands.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        toDiagram\n                        \n                    \n                \n            \n            \n                \n                    \n                    toDiagram(body: EngineDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(undefined.toDiagram)@ApiResponse({status: undefined, description: undefined, type: DiagramDto})\n                \n            \n\n            \n                \n                    Defined in src/base/controllers/engine.controller.ts:44\n                \n            \n\n\n            \n                \n                    Endpoint to convert engine rules into a diagram.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                EngineDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nEngine parameters.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The generated diagram.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * Controller to handle engine-related API requests.\n */\nimport { BadRequestException, Body, Controller, Get, HttpStatus, Post, Logger } from '@nestjs/common';\nimport { MESSAGES, getCommandsInfo } from '@common/utils';\nimport { URLS } from '@common/constants';\nimport { CommandInfoDto } from '../dto/command.dto';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { DiagramDto, EngineDto } from '../../project/dto';\nimport { Engine } from 'typescript-business-rules-engine';\n\n@Controller(URLS.ENGINE.base)\n@ApiTags('Engine')\nexport class CommandController {\n\t/**\n\t * Endpoint to retrieve information about available commands.\n\t *\n\t * @returns {Promise} List of available commands.\n\t */\n\t@Get(URLS.ENGINE.getCommands)\n\t@ApiResponse({\n\t\tstatus: HttpStatus.OK,\n\t\tdescription: MESSAGES.OK,\n\t\ttype: CommandInfoDto,\n\t\tisArray: true,\n\t})\n\tpublic async getCommands(): Promise {\n\t\treturn getCommandsInfo();\n\t}\n\n\t/**\n\t * Endpoint to convert engine rules into a diagram.\n\t *\n\t * @param {EngineDto} body - Engine parameters.\n\t * @returns {Promise} The generated diagram.\n\t * @throws {BadRequestException} If there is an error generating the diagram.\n\t */\n\t@Post(URLS.ENGINE.toDiagram)\n\t@ApiResponse({\n\t\tstatus: HttpStatus.OK,\n\t\tdescription: MESSAGES.OK,\n\t\ttype: DiagramDto,\n\t})\n\tpublic async toDiagram(@Body() body: EngineDto): Promise {\n\t\ttry {\n\t\t\tconst engine = new Engine(body.name, body.rules, body.description);\n\t\t\tconst diagram = engine.toDiagram();\n\t\t\treturn { diagram };\n\t\t} catch (error) {\n\t\t\tLogger.error(error, 'CommandController.toDiagram');\n\t\t\tthrow new BadRequestException(error);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommandInfoDto.html":{"url":"classes/CommandInfoDto.html","title":"class - CommandInfoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommandInfoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/dto/command.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                arguments\n                            \n                            \n                                    \n                                argumentType\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                examples\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                returnType\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        arguments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ArgumentInfoDto[] | ArgumentInfoDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:90\n                        \n                    \n\n            \n                \n                    The arguments of the command.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        argumentType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:84\n                        \n                    \n\n            \n                \n                    The argument type of the command.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoryInfoDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:72\n                        \n                    \n\n            \n                \n                    The category of the command.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:78\n                        \n                    \n\n            \n                \n                    The description of the command.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        examples\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:102\n                        \n                    \n\n            \n                \n                    The examples of the command.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:54\n                        \n                    \n\n            \n                \n                    The id of the command.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:60\n                        \n                    \n\n            \n                \n                    The name of the command.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        returnType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:96\n                        \n                    \n\n            \n                \n                    The return type of the command.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/command.dto.ts:66\n                        \n                    \n\n            \n                \n                    The type of the command.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ArgumentInfoDto {\n\t/**\n\t * The name of the argument.\n\t */\n\t@ApiProperty()\n\tname: string;\n\n\t/**\n\t * The description of the argument.\n\t */\n\t@ApiProperty()\n\tdescription: string;\n\n\t/**\n\t * The accepted types of the argument.\n\t */\n\t@ApiProperty({ enum: ['string', 'number', 'boolean', 'object', 'array', 'unknown', 'date', 'set'] })\n\tacceptedTypes: string[];\n\n\t/**\n\t * Whether the argument is optional or not.\n\t */\n\t@ApiProperty()\n\tisOptional: boolean;\n}\n\nexport class CategoryInfoDto {\n\t/**\n\t * The id of the category.\n\t */\n\t@ApiProperty()\n\tid: string;\n\n\t/**\n\t * The name of the category.\n\t */\n\t@ApiProperty()\n\tname: string;\n\n\t/**\n\t * The description of the category.\n\t */\n\t@ApiProperty()\n\tdescription: string;\n}\n\nexport class CommandInfoDto {\n\t/**\n\t * The id of the command.\n\t */\n\t@ApiProperty()\n\tid: string;\n\n\t/**\n\t * The name of the command.\n\t */\n\t@ApiProperty()\n\tname: string;\n\n\t/**\n\t * The type of the command.\n\t */\n\t@ApiProperty({ enum: ['function', 'operator', 'context'] })\n\ttype: string;\n\n\t/**\n\t * The category of the command.\n\t */\n\t@ApiProperty()\n\tcategory: CategoryInfoDto;\n\n\t/**\n\t * The description of the command.\n\t */\n\t@ApiProperty()\n\tdescription: string;\n\n\t/**\n\t * The argument type of the command.\n\t */\n\t@ApiProperty({ enum: ['variable', 'non-variable'] })\n\targumentType: string;\n\n\t/**\n\t * The arguments of the command.\n\t */\n\t@ApiProperty({ type: [ArgumentInfoDto] })\n\targuments: ArgumentInfoDto[] | ArgumentInfoDto;\n\n\t/**\n\t * The return type of the command.\n\t */\n\t@ApiProperty({ enum: ['string', 'number', 'boolean', 'object', 'array', 'unknown', 'date', 'set'] })\n\treturnType: string;\n\n\t/**\n\t * The examples of the command.\n\t */\n\t@ApiProperty({ type: [String] })\n\texamples: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        configure\n                        \n                    \n                \n            \n            \n                \n                    \n                    configure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/common/common.module.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Global, MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\n\nimport * as providers from './providers';\n\nconst services = Object.values(providers);\n\n@Global()\n@Module({\n\tproviders: services,\n\texports: services,\n})\nexport class CommonModule implements NestModule {\n\t// Global Middleware\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\tpublic configure(consumer: MiddlewareConsumer): void {\n\t\t// consumer.apply().forRoutes('*');\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/providers/config.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        NestConfig\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(path: P)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/config.service.ts:8\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            P\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     PathValue\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService as NestConfig, Path, PathValue } from '@nestjs/config';\n\nimport type { Config } from '../../config';\n\n@Injectable()\nexport class ConfigService extends NestConfig {\n\tpublic override get>(path: P): PathValue {\n\t\tconst value = super.get(path, { infer: true });\n\n\t\tif (value === undefined) {\n\t\t\tthrow new Error(`NotFoundConfig: ${path}`);\n\t\t}\n\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContextController.html":{"url":"controllers/ContextController.html","title":"controller - ContextController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContextController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/controllers/context.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                getStaticContexts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Public\n                        Async\n                        getStaticContexts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStaticContexts(req: Request, page: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(undefined.getStaticContexts)@ApiQuery({name: 'page', required: false, type: Number})@ApiQuery({name: 'limit', required: false, type: Number})@ApiResponse({status: undefined, description: undefined, type: PaginatedResultDto})\n                \n            \n\n            \n                \n                    Defined in src/base/controllers/context.controller.ts:31\n                \n            \n\n\n            \n                \n                    Returns a paginated result of static contexts.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The Express request object.\n\n                                    \n                                \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        The page number for pagination (optional, default is 1).\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                    \n                                        The limit of items per page for pagination (optional, default is 10).\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        A PaginatedResult object containing the contexts for the specified page and limit.\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        /**\n * This controller is responsible for handling requests related to contexts.\n */\nimport { Controller, Get, HttpStatus, Query, Req } from '@nestjs/common';\nimport { MESSAGES, PaginatedResult } from '@common/utils';\nimport { ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { promises as fs } from 'fs';\nimport { Request } from 'express';\nimport { URLS } from '@common/constants';\nimport { PaginatedResultDto } from '../dto/context.dto';\n\n@Controller(URLS.CONTEXT.base)\n@ApiTags('Context')\nexport class ContextController {\n\t/**\n\t * Returns a paginated result of static contexts.\n\t *\n\t * @param req The Express request object.\n\t * @param page The page number for pagination (optional, default is 1).\n\t * @param limit The limit of items per page for pagination (optional, default is 10).\n\t * @returns A PaginatedResult object containing the contexts for the specified page and limit.\n\t */\n\t@Get(URLS.CONTEXT.getStaticContexts)\n\t@ApiQuery({ name: 'page', required: false, type: Number })\n\t@ApiQuery({ name: 'limit', required: false, type: Number })\n\t@ApiResponse({\n\t\tstatus: HttpStatus.OK,\n\t\tdescription: MESSAGES.OK,\n\t\ttype: PaginatedResultDto,\n\t})\n\tpublic async getStaticContexts(\n\t\t@Req() req: Request,\n\t\t@Query('page') page = 1,\n\t\t@Query('limit') limit = 10\n\t): Promise> {\n\t\tconst host = `${req.protocol}://${req.get('host')}`;\n\t\tconst files = await fs.readdir(`${__dirname}/../../../public/static/contexts`);\n\t\tconst JSONFiles = files.filter((file) => file.endsWith('.json'));\n\t\tconst fileCount = JSONFiles.length;\n\t\t// only read the files for the current page\n\t\tconst filesForPage = JSONFiles.slice((page - 1) * limit, page * limit);\n\t\tconst contexts = await Promise.all(\n\t\t\tfilesForPage.map(async (file) => {\n\t\t\t\tconst data = await fs.readFile(`${__dirname}/../../../public/static/contexts/${file}`, 'utf-8');\n\t\t\t\tconst response = {\n\t\t\t\t\tdata: JSON.parse(data),\n\t\t\t\t\tfile: `${host}/public/static/contexts/${file}`,\n\t\t\t\t};\n\t\t\t\treturn response;\n\t\t\t})\n\t\t);\n\t\tconst paginatedResult = new PaginatedResult(contexts, page, limit, fileCount, `${host}${req.path}`);\n\t\treturn paginatedResult;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextDto.html":{"url":"classes/ContextDto.html","title":"class - ContextDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/dto/context.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                context\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/context.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsObject } from 'class-validator';\n\nexport class ContextDto {\n\t@IsObject()\n\tcontext: object;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProjectDto.html":{"url":"classes/CreateProjectDto.html","title":"class - CreateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/dto/create-project.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/create-project.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/create-project.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString } from 'class-validator';\nimport type { Project } from '@entities/project';\n\nexport class CreateProjectDto\n\timplements Omit\n{\n\t@IsString()\n\tname: string;\n\n\t@IsOptional()\n\t@IsString()\n\tdescription: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DiagramDto.html":{"url":"classes/DiagramDto.html","title":"class - DiagramDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DiagramDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/dto/engine.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                diagram\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        diagram\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/engine.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsArray } from 'class-validator';\nimport type { EngineObject, RuleObject } from 'typescript-business-rules-engine';\n\nexport class EngineDto implements EngineObject {\n\t@IsString()\n\t@IsOptional()\n\tname: string;\n\n\t@IsString()\n\t@IsOptional()\n\tdescription: string;\n\n\t@IsArray()\n\trules: RuleObject[];\n}\n\nexport class DiagramDto {\n\t@IsString()\n\tdiagram: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EngineDto.html":{"url":"classes/EngineDto.html","title":"class - EngineDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EngineDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/dto/engine.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        EngineObject\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                rules\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/engine.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/engine.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        rules\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RuleObject[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/engine.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsArray } from 'class-validator';\nimport type { EngineObject, RuleObject } from 'typescript-business-rules-engine';\n\nexport class EngineDto implements EngineObject {\n\t@IsString()\n\t@IsOptional()\n\tname: string;\n\n\t@IsString()\n\t@IsOptional()\n\tdescription: string;\n\n\t@IsArray()\n\trules: RuleObject[];\n}\n\nexport class DiagramDto {\n\t@IsString()\n\tdiagram: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/controllers/health.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                A controller class for handling health check requests\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                    \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('health')@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/base/controllers/health.controller.ts:34\n                \n            \n\n\n            \n                \n                    A GET endpoint for checking the health of the application\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \nA promise that resolves to an object indicating the health status of the application\n\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport {\n\tHealthCheck,\n\tHealthCheckResult,\n\tHealthCheckService,\n\tHealthIndicatorResult,\n\tHttpHealthIndicator,\n\tTypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n/**\n * A controller class for handling health check requests\n * @constructor\n * @param {HealthCheckService} health - An instance of the HealthCheckService class\n * @param {HttpHealthIndicator} http - An instance of the HttpHealthIndicator class\n * @param {TypeOrmHealthIndicator} db - An instance of the TypeOrmHealthIndicator class\n */\n@Controller()\nexport class HealthController {\n\tconstructor(\n\t\tprivate health: HealthCheckService,\n\t\tprivate http: HttpHealthIndicator,\n\t\tprivate db: TypeOrmHealthIndicator\n\t) {}\n\n\t/**\n\t * A GET endpoint for checking the health of the application\n\t * @async\n\t * @function check\n\t * @returns {Promise} - A promise that resolves to an object indicating the health status of the application\n\t */\n\t@Get('health')\n\t@HealthCheck()\n\tpublic async check(): Promise {\n\t\treturn this.health.check([\n\t\t\tasync (): Promise => this.http.pingCheck('dns', 'https://1.1.1.1'),\n\t\t\tasync (): Promise => this.db.pingCheck('database'),\n\t\t]);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResult.html":{"url":"classes/PaginatedResult.html","title":"class - PaginatedResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/pagination/paginate.ts\n        \n\n\n            \n                Description\n            \n            \n                Paginated result containing a subset of data along with pagination information\n\n            \n\n            \n                Extends\n            \n            \n                        Pagination\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                skippedItems\n                            \n                            \n                                totalPages\n                            \n                            \n                                data\n                            \n                            \n                                limit\n                            \n                            \n                                    Optional\n                                next\n                            \n                            \n                                page\n                            \n                            \n                                    Optional\n                                previous\n                            \n                            \n                                totalCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNextPage\n                            \n                            \n                                getPreviousPage\n                            \n                            \n                                hasNextPage\n                            \n                            \n                                hasPreviousPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(data: T[], page: number, limit: number, totalCount: number, host: string)\n                    \n                \n                        \n                            \n                                Defined in src/common/utils/pagination/paginate.ts:60\n                            \n                        \n\n                \n                    \n                            Constructor for creating a new PaginatedResult object\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    T[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe subset of data being returned\n\n\n                                                        \n                                                \n                                                \n                                                        page\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe current page number\n\n\n                                                        \n                                                \n                                                \n                                                        limit\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe maximum number of items per page\n\n\n                                                        \n                                                \n                                                \n                                                        totalCount\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe total number of items across all pages\n\n\n                                                        \n                                                \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe host URL for the API\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        skippedItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:28\n                        \n                    \n\n            \n                \n                    The number of items skipped in the current page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:26\n                        \n                    \n\n            \n                \n                    The total number of pages in the paginated data set\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:7\n\n                        \n                    \n\n            \n                \n                    The subset of data being returned\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:11\n\n                        \n                    \n\n            \n                \n                    The maximum number of items per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        next\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:15\n\n                        \n                    \n\n            \n                \n                    URL for the next page of data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:9\n\n                        \n                    \n\n            \n                \n                    The current page number\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        previous\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:17\n\n                        \n                    \n\n            \n                \n                    URL for the previous page of data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         Pagination\n\n                            \n                        \n                    \n                        \n                                Defined in         Pagination:13\n\n                        \n                    \n\n            \n                \n                    The total number of items across all pages\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getNextPage\n                        \n                    \n                \n            \n            \n                \ngetNextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/pagination/paginate.ts:50\n                \n            \n\n\n            \n                \n                    Gets the URL for the next page of data\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \nThe URL for the next page of data\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPreviousPage\n                        \n                    \n                \n            \n            \n                \ngetPreviousPage()\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/pagination/paginate.ts:58\n                \n            \n\n\n            \n                \n                    Gets the URL for the previous page of data\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \nThe URL for the previous page of data\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasNextPage\n                        \n                    \n                \n            \n            \n                \nhasNextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/pagination/paginate.ts:34\n                \n            \n\n\n            \n                \n                    Determines if there is a next page of data available\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \nTrue if there is a next page, false otherwise\n\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasPreviousPage\n                        \n                    \n                \n            \n            \n                \nhasPreviousPage()\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/pagination/paginate.ts:42\n                \n            \n\n\n            \n                \n                    Determines if there is a previous page of data available\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \nTrue if there is a previous page, false otherwise\n\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Pagination {\n\t/** The subset of data being returned */\n\tdata: T[];\n\t/** The current page number */\n\tpage: number;\n\t/** The maximum number of items per page */\n\tlimit: number;\n\t/** The total number of items across all pages */\n\ttotalCount: number;\n\t/** URL for the next page of data */\n\tnext?: string;\n\t/** URL for the previous page of data */\n\tprevious?: string;\n}\n\n/**\n * Paginated result containing a subset of data along with pagination information\n * @template T - The type of data being paginated\n */\nexport class PaginatedResult extends Pagination {\n\t/** The total number of pages in the paginated data set */\n\ttotalPages: number;\n\t/** The number of items skipped in the current page */\n\tskippedItems: number;\n\n\t/**\n\t * Determines if there is a next page of data available\n\t * @returns {boolean} - True if there is a next page, false otherwise\n\t */\n\thasNextPage(): boolean {\n\t\treturn this.page  1;\n\t}\n\n\t/**\n\t * Gets the URL for the next page of data\n\t * @returns {string} - The URL for the next page of data\n\t */\n\tgetNextPage(): string {\n\t\treturn `?page=${this.page + 1}&limit=${this.limit}`;\n\t}\n\n\t/**\n\t * Gets the URL for the previous page of data\n\t * @returns {string} - The URL for the previous page of data\n\t */\n\tgetPreviousPage(): string {\n\t\treturn `?page=${this.page - 1}&limit=${this.limit}`;\n\t}\n\n\t/**\n\t * Constructor for creating a new PaginatedResult object\n\t * @param {T[]} data - The subset of data being returned\n\t * @param {number} page - The current page number\n\t * @param {number} limit - The maximum number of items per page\n\t * @param {number} totalCount - The total number of items across all pages\n\t * @param {string} host - The host URL for the API\n\t */\n\tconstructor(data: T[], page: number, limit: number, totalCount: number, host = 'http://localhost:3000') {\n\t\tsuper();\n\t\tthis.data = data;\n\t\tthis.page = page;\n\t\tthis.limit = limit;\n\t\tthis.totalCount = totalCount;\n\t\tthis.totalPages = Math.ceil(totalCount / limit);\n\t\tthis.skippedItems = (page - 1) * limit;\n\t\tthis.previous = null;\n\t\tthis.next = null;\n\t\tif (this.hasPreviousPage()) {\n\t\t\tthis.previous = `${host}${this.getPreviousPage()}`;\n\t\t}\n\t\tif (this.hasNextPage()) {\n\t\t\tthis.next = `${host}${this.getNextPage()}`;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResultDto.html":{"url":"classes/PaginatedResultDto.html","title":"class - PaginatedResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/base/dto/context.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                data\n                            \n                            \n                                    \n                                limit\n                            \n                            \n                                    \n                                    Optional\n                                next\n                            \n                            \n                                    \n                                page\n                            \n                            \n                                    \n                                    Optional\n                                previous\n                            \n                            \n                                    \n                                totalCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/context.dto.ts:8\n                        \n                    \n\n            \n                \n                    Array of objects containing the paginated data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/context.dto.ts:20\n                        \n                    \n\n            \n                \n                    Limit of results per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        next\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/context.dto.ts:32\n                        \n                    \n\n            \n                \n                    URL to the next page of results\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/context.dto.ts:14\n                        \n                    \n\n            \n                \n                    Current page number\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        previous\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/context.dto.ts:38\n                        \n                    \n\n            \n                \n                    URL to the previous page of results\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/base/dto/context.dto.ts:26\n                        \n                    \n\n            \n                \n                    Total count of results\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class PaginatedResultDto {\n\t/**\n\t * Array of objects containing the paginated data\n\t */\n\t@ApiProperty({ type: [Object] })\n\tdata: T[];\n\n\t/**\n\t * Current page number\n\t */\n\t@ApiProperty()\n\tpage: number;\n\n\t/**\n\t * Limit of results per page\n\t */\n\t@ApiProperty()\n\tlimit: number;\n\n\t/**\n\t * Total count of results\n\t */\n\t@ApiProperty()\n\ttotalCount: number;\n\n\t/**\n\t * URL to the next page of results\n\t */\n\t@ApiProperty()\n\tnext?: string;\n\n\t/**\n\t * URL to the previous page of results\n\t */\n\t@ApiProperty()\n\tprevious?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/pagination/paginate.ts\n        \n\n\n            \n                Description\n            \n            \n                Pagination object for retrieving a subset of data\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                limit\n                            \n                            \n                                    Optional\n                                next\n                            \n                            \n                                page\n                            \n                            \n                                    Optional\n                                previous\n                            \n                            \n                                totalCount\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:7\n                        \n                    \n\n            \n                \n                    The subset of data being returned\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:11\n                        \n                    \n\n            \n                \n                    The maximum number of items per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        next\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:15\n                        \n                    \n\n            \n                \n                    URL for the next page of data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:9\n                        \n                    \n\n            \n                \n                    The current page number\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        previous\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:17\n                        \n                    \n\n            \n                \n                    URL for the previous page of data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/utils/pagination/paginate.ts:13\n                        \n                    \n\n            \n                \n                    The total number of items across all pages\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Pagination {\n\t/** The subset of data being returned */\n\tdata: T[];\n\t/** The current page number */\n\tpage: number;\n\t/** The maximum number of items per page */\n\tlimit: number;\n\t/** The total number of items across all pages */\n\ttotalCount: number;\n\t/** URL for the next page of data */\n\tnext?: string;\n\t/** URL for the previous page of data */\n\tprevious?: string;\n}\n\n/**\n * Paginated result containing a subset of data along with pagination information\n * @template T - The type of data being paginated\n */\nexport class PaginatedResult extends Pagination {\n\t/** The total number of pages in the paginated data set */\n\ttotalPages: number;\n\t/** The number of items skipped in the current page */\n\tskippedItems: number;\n\n\t/**\n\t * Determines if there is a next page of data available\n\t * @returns {boolean} - True if there is a next page, false otherwise\n\t */\n\thasNextPage(): boolean {\n\t\treturn this.page  1;\n\t}\n\n\t/**\n\t * Gets the URL for the next page of data\n\t * @returns {string} - The URL for the next page of data\n\t */\n\tgetNextPage(): string {\n\t\treturn `?page=${this.page + 1}&limit=${this.limit}`;\n\t}\n\n\t/**\n\t * Gets the URL for the previous page of data\n\t * @returns {string} - The URL for the previous page of data\n\t */\n\tgetPreviousPage(): string {\n\t\treturn `?page=${this.page - 1}&limit=${this.limit}`;\n\t}\n\n\t/**\n\t * Constructor for creating a new PaginatedResult object\n\t * @param {T[]} data - The subset of data being returned\n\t * @param {number} page - The current page number\n\t * @param {number} limit - The maximum number of items per page\n\t * @param {number} totalCount - The total number of items across all pages\n\t * @param {string} host - The host URL for the API\n\t */\n\tconstructor(data: T[], page: number, limit: number, totalCount: number, host = 'http://localhost:3000') {\n\t\tsuper();\n\t\tthis.data = data;\n\t\tthis.page = page;\n\t\tthis.limit = limit;\n\t\tthis.totalCount = totalCount;\n\t\tthis.totalPages = Math.ceil(totalCount / limit);\n\t\tthis.skippedItems = (page - 1) * limit;\n\t\tthis.previous = null;\n\t\tthis.next = null;\n\t\tif (this.hasPreviousPage()) {\n\t\t\tthis.previous = `${host}${this.getPreviousPage()}`;\n\t\t}\n\t\tif (this.hasNextPage()) {\n\t\t\tthis.next = `${host}${this.getNextPage()}`;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Project.html":{"url":"entities/Project.html","title":"entity - Project","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/project/project.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                contextFile\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                engineFile\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        contextFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', name: 'context_file', length: 250, nullable: true})@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project/project.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project/project.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project/project.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        engineFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', name: 'engine_file', length: 250, nullable: true})@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project/project.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 150})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project/project.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', name: 'updated_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project/project.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/project/project.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Transform } from 'class-transformer';\nimport { Column, CreateDateColumn, Entity, PrimaryGeneratedColumn, UpdateDateColumn } from 'typeorm';\n@Entity('projects')\nexport class Project {\n\t@PrimaryGeneratedColumn('uuid')\n\tuuid: string;\n\n\t@Column({ type: 'varchar', length: 150 })\n\tname: string;\n\n\t@Column({ type: 'text', default: '' })\n\tdescription: string;\n\n\t@Column({ type: 'varchar', name: 'engine_file', length: 250, nullable: true })\n\t@Transform(({ value }) => {\n\t\tif (value) {\n\t\t\tconst host = process.env.BACKEND_HOST || 'http://localhost:3000';\n\t\t\treturn `${host}/public/projects/${value}`;\n\t\t}\n\t\treturn value;\n\t})\n\tengineFile?: string;\n\n\t@Column({ type: 'varchar', name: 'context_file', length: 250, nullable: true })\n\t@Transform(({ value }) => {\n\t\tif (value) {\n\t\t\tconst host = process.env.BACKEND_HOST || 'http://localhost:3000';\n\t\t\treturn `${host}/public/contexts/${value}`;\n\t\t}\n\t\treturn value;\n\t})\n\tcontextFile?: string;\n\n\t@CreateDateColumn({ type: 'timestamp', name: 'created_at' })\n\tcreatedAt: Date;\n\n\t@UpdateDateColumn({ type: 'timestamp', name: 'updated_at' })\n\tupdatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProjectsController.html":{"url":"controllers/ProjectsController.html","title":"controller - ProjectsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProjectsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/controllers/project.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getContext\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getDiagram\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                getEngine\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                setContext\n                            \n                            \n                                    \n                                    \n                                    Public\n                                    Async\n                                setEngine\n                            \n                            \n                                    \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(body: CreateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(undefined.createProject)@ApiResponse({status: undefined, description: undefined, type: Project})@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/project/controllers/project.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: PaginateQuery)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(undefined.listProjects)@PaginateQueryOptions()@ApiPaginatedResponse(Project)\n                \n            \n\n            \n                \n                    Defined in src/project/controllers/project.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            PaginateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(undefined.getProject)\n                \n            \n\n            \n                \n                    Defined in src/project/controllers/project.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        getContext\n                        \n                    \n                \n            \n            \n                \n                    \n                    getContext(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(undefined.getContext)@ApiResponse({status: undefined, description: undefined, type: Object})\n                \n            \n\n            \n                \n                    Defined in src/project/controllers/project.controller.ts:279\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        getDiagram\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDiagram(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(undefined.getDiagram)@ApiResponse({status: undefined, description: undefined, type: DiagramDto})\n                \n            \n\n            \n                \n                    Defined in src/project/controllers/project.controller.ts:336\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        getEngine\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEngine(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(undefined.getEngine)@ApiResponse({status: undefined, description: undefined, type: EngineDto})\n                \n            \n\n            \n                \n                    Defined in src/project/controllers/project.controller.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(uuid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(undefined.deleteProject)@ApiResponse({status: undefined, description: undefined})@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n            \n                \n                    Defined in src/project/controllers/project.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        setContext\n                        \n                    \n                \n            \n            \n                \n                    \n                    setContext(uuid: string, body: ContextDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(undefined.setContext)@ApiResponse({status: undefined, description: undefined, type: Object})\n                \n            \n\n            \n                \n                    Defined in src/project/controllers/project.controller.ts:303\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                ContextDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Public\n                        Async\n                        setEngine\n                        \n                    \n                \n            \n            \n                \n                    \n                    setEngine(uuid: string, engineDto: EngineDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(undefined.setEngine)@ApiResponse({status: undefined, description: undefined, type: EngineDto})\n                \n            \n\n            \n                \n                    Defined in src/project/controllers/project.controller.ts:243\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    engineDto\n                                    \n                                                EngineDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(uuid: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(undefined.updateProject)\n                \n            \n\n            \n                \n                    Defined in src/project/controllers/project.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProjectDto\n                                    \n                                                UpdateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        \n                        \n                        Public\n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(undefined.uploadProject)@ApiConsumes('multipart/form-data')@ApiResponse({status: undefined, description: undefined, type: Project})@ApiBody({description: 'TSBR File', schema: undefined})@UseInterceptors(undefined)@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/project/controllers/project.controller.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n\tController,\n\tGet,\n\tPost,\n\tBody,\n\tPatch,\n\tParam,\n\tDelete,\n\tNotFoundException,\n\tBadRequestException,\n\tHttpStatus,\n\tParseUUIDPipe,\n\tUseInterceptors,\n\tUploadedFile,\n\tParseFilePipe,\n\tMaxFileSizeValidator,\n\tLogger,\n\tClassSerializerInterceptor,\n\tUnsupportedMediaTypeException,\n\tHttpCode,\n} from '@nestjs/common';\nimport { MESSAGES, PaginateQueryOptions, ApiPaginatedResponse, exportContext, importContext } from '@common/utils';\nimport { ProjectsService } from '../services/project.service';\nimport { CreateProjectDto, EngineDto, UpdateProjectDto, UploadProjectDto, ContextDto, DiagramDto } from '../dto';\nimport { Project } from '@entities/project';\nimport { URLS } from '@common/constants';\nimport { Paginate, PaginateQuery, Paginated } from 'nestjs-paginate';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Engine, getUrlDiagram } from 'typescript-business-rules-engine';\nimport { ApiBody, ApiConsumes, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { diskStorage } from 'multer';\nimport { v4 as uuidv4 } from 'uuid';\nimport { unlink } from 'fs';\nimport Ajv from 'ajv';\nimport type { JSONSchema7 } from 'json-schema';\n\n@Controller(URLS.PROJECTS.base)\n@ApiTags('Projects')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class ProjectsController {\n\tconstructor(private readonly projectsService: ProjectsService) {}\n\n\t@Post(URLS.PROJECTS.createProject)\n\t@ApiResponse({\n\t\tstatus: HttpStatus.CREATED,\n\t\tdescription: MESSAGES.CREATED,\n\t\ttype: Project,\n\t})\n\t@HttpCode(HttpStatus.CREATED)\n\tpublic async create(@Body() body: CreateProjectDto): Promise {\n\t\tconst project = await this.projectsService.create(body);\n\t\treturn project;\n\t}\n\n\t@Get(URLS.PROJECTS.listProjects)\n\t@PaginateQueryOptions()\n\t@ApiPaginatedResponse(Project)\n\tpublic async findAll(@Paginate() query: PaginateQuery): Promise> {\n\t\treturn await this.projectsService.findAll(query);\n\t}\n\n\t@Get(URLS.PROJECTS.getProject)\n\tpublic async findOne(@Param('uuid', ParseUUIDPipe) uuid: string): Promise {\n\t\tconst project = await this.projectsService.findOne(uuid);\n\t\tif (!project) {\n\t\t\tthrow new NotFoundException('Project not found');\n\t\t}\n\t\treturn project;\n\t}\n\n\t@Patch(URLS.PROJECTS.updateProject)\n\tpublic async update(\n\t\t@Param('uuid', ParseUUIDPipe) uuid: string,\n\t\t@Body() updateProjectDto: UpdateProjectDto\n\t): Promise {\n\t\tconst project = await this.projectsService.update(uuid, updateProjectDto);\n\t\tif (!project) {\n\t\t\tthrow new NotFoundException('Project not found');\n\t\t}\n\t\tif (project.engineFile) {\n\t\t\t// rename the name and description of the engine file\n\t\t\tconst engine = await Engine.import(`${__dirname}/../../../public/projects/${project.engineFile}`);\n\t\t\tengine.name = project.name;\n\t\t\tengine.description = project.description;\n\t\t\tawait engine.export(`${__dirname}/../../../public/projects/`, project.uuid);\n\t\t}\n\t\treturn project;\n\t}\n\n\t@Delete(URLS.PROJECTS.deleteProject)\n\t@ApiResponse({\n\t\tstatus: HttpStatus.NO_CONTENT,\n\t\tdescription: MESSAGES.NO_CONTENT,\n\t})\n\t@HttpCode(HttpStatus.NO_CONTENT)\n\tpublic async remove(@Param('uuid', ParseUUIDPipe) uuid: string): Promise {\n\t\tconst project = await this.projectsService.findOne(uuid);\n\t\tif (!project) {\n\t\t\treturn;\n\t\t}\n\t\tif (project.engineFile) {\n\t\t\t// delete the engine file\n\t\t\tunlink(`${__dirname}/../../../public/projects/${project.engineFile}`, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tLogger.error(err, 'ProjectsController.remove');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tif (project.contextFile) {\n\t\t\t// delete the context file\n\t\t\tunlink(`${__dirname}/../../../public/projects/${project.contextFile}`, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tLogger.error(err, 'ProjectsController.remove');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tawait this.projectsService.remove(uuid);\n\t}\n\n\t@Post(URLS.PROJECTS.uploadProject)\n\t@ApiConsumes('multipart/form-data')\n\t@ApiResponse({\n\t\tstatus: HttpStatus.CREATED,\n\t\tdescription: MESSAGES.CREATED,\n\t\ttype: Project,\n\t})\n\t@ApiBody({\n\t\tdescription: 'TSBR File',\n\t\tschema: {\n\t\t\ttype: 'object',\n\t\t\tproperties: {\n\t\t\t\tfile: {\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tformat: 'binary',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t})\n\t@UseInterceptors(\n\t\tFileInterceptor('file', {\n\t\t\tstorage: diskStorage({\n\t\t\t\tdestination: `${__dirname}/../../../public/projects/`,\n\t\t\t\tfilename: (req, file, cb) => {\n\t\t\t\t\tconst fileNameSplit = file.originalname.split('.');\n\t\t\t\t\tconst fileExtension = fileNameSplit[fileNameSplit.length - 1];\n\t\t\t\t\tcb(null, `${uuidv4()}.${fileExtension}`);\n\t\t\t\t},\n\t\t\t}),\n\t\t\tfileFilter: (req, file, cb) => {\n\t\t\t\tconst fileNameSplit = file.originalname.split('.');\n\t\t\t\tconst fileExtension = fileNameSplit[fileNameSplit.length - 1];\n\t\t\t\tif (fileExtension !== 'tsbr') {\n\t\t\t\t\tcb(new UnsupportedMediaTypeException('File extension is not valid. Only .tsbr files are allowed'), false);\n\t\t\t\t}\n\t\t\t\tcb(null, true);\n\t\t\t},\n\t\t})\n\t)\n\t@HttpCode(HttpStatus.CREATED)\n\tpublic async uploadFile(\n\t\t@UploadedFile(\n\t\t\tnew ParseFilePipe({\n\t\t\t\tvalidators: [new MaxFileSizeValidator({ maxSize: 1024 * 1024 * 10 })],\n\t\t\t})\n\t\t)\n\t\tfile: Express.Multer.File\n\t): Promise {\n\t\tlet engine: Engine;\n\t\ttry {\n\t\t\tengine = await Engine.import(file.path);\n\t\t} catch (e) {\n\t\t\tLogger.error(e, 'ProjectsController.uploadFile');\n\t\t\t// Delete the file\n\t\t\tunlink(file.path, (err) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tLogger.error(err, 'ProjectsController.uploadFile');\n\t\t\t\t}\n\t\t\t});\n\t\t\tthrow new BadRequestException('Error Loading File: Invalid TypeScript Business Rules file');\n\t\t}\n\t\tconst fileName = file.filename.split('.')[0];\n\n\t\tconst ajv = new Ajv();\n\t\tif (engine.dataSchema) {\n\t\t\tif (!ajv.validateSchema(engine.dataSchema)) {\n\t\t\t\tthrow new BadRequestException('Invalid Context Schema');\n\t\t\t}\n\n\t\t\tawait exportContext(engine.dataSchema, `${__dirname}/../../../public/contexts`, fileName);\n\t\t}\n\n\t\tconst uploadData: UploadProjectDto = {\n\t\t\tuuid: fileName,\n\t\t\tname: engine.name || 'Untitled Project',\n\t\t\tdescription: engine.description || '',\n\t\t\tengineFile: file.filename,\n\t\t\tcontextFile: engine.dataSchema ? `${fileName}.json` : undefined,\n\t\t};\n\t\tconst project = await this.projectsService.upload(uploadData);\n\t\treturn project;\n\t}\n\n\t@Get(URLS.PROJECTS.getEngine)\n\t@ApiResponse({\n\t\tstatus: HttpStatus.OK,\n\t\tdescription: MESSAGES.OK,\n\t\ttype: EngineDto,\n\t})\n\tpublic async getEngine(@Param('uuid', ParseUUIDPipe) uuid: string): Promise {\n\t\tconst project = await this.projectsService.findOne(uuid);\n\t\tif (!project) {\n\t\t\tthrow new NotFoundException('Project not found');\n\t\t}\n\n\t\tif (!project.engineFile) {\n\t\t\tconst engineObject: EngineDto = {\n\t\t\t\tname: project.name,\n\t\t\t\tdescription: project.description,\n\t\t\t\trules: [],\n\t\t\t};\n\t\t\treturn engineObject;\n\t\t}\n\t\ttry {\n\t\t\tconst engine = await Engine.import(`${__dirname}/../../../public/projects/${project.engineFile}`);\n\t\t\treturn engine.toObject();\n\t\t} catch (e) {\n\t\t\tLogger.error(e, 'ProjectsController.getEngine');\n\t\t\tconst engineObject: EngineDto = {\n\t\t\t\tname: project.name,\n\t\t\t\tdescription: project.description,\n\t\t\t\trules: [],\n\t\t\t};\n\t\t\treturn engineObject;\n\t\t}\n\t}\n\n\t@Post(URLS.PROJECTS.setEngine)\n\t@ApiResponse({\n\t\tstatus: HttpStatus.OK,\n\t\tdescription: MESSAGES.OK,\n\t\ttype: EngineDto,\n\t})\n\tpublic async setEngine(@Param('uuid', ParseUUIDPipe) uuid: string, @Body() engineDto: EngineDto): Promise {\n\t\tconst project = await this.projectsService.findOne(uuid);\n\t\tif (!project) {\n\t\t\tthrow new NotFoundException('Project not found');\n\t\t}\n\t\tlet engine: Engine;\n\t\ttry {\n\t\t\tlet dataSchema: JSONSchema7 | undefined;\n\t\t\tif (project.contextFile) {\n\t\t\t\tconst context = await importContext(`${__dirname}/../../../public/contexts`, project.uuid);\n\t\t\t\tdataSchema = JSON.parse(context);\n\t\t\t}\n\n\t\t\tengine = new Engine(\n\t\t\t\tengineDto.name || project.name,\n\t\t\t\tengineDto.rules,\n\t\t\t\tengineDto.description || project.description,\n\t\t\t\tundefined,\n\t\t\t\tdataSchema\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tLogger.error(e, 'ProjectsController.setEngine');\n\t\t\tthrow new BadRequestException(`Error Configuring Rules: ${e}`);\n\t\t}\n\t\tawait engine.export(`${__dirname}/../../../public/projects/`, project.uuid);\n\t\tproject.engineFile = `${project.uuid}.tsbr`;\n\t\tawait this.projectsService.update(uuid, project);\n\t\treturn engine.toObject();\n\t}\n\n\t@Get(URLS.PROJECTS.getContext)\n\t@ApiResponse({\n\t\tstatus: HttpStatus.OK,\n\t\tdescription: MESSAGES.OK,\n\t\ttype: Object,\n\t})\n\tpublic async getContext(@Param('uuid', ParseUUIDPipe) uuid: string): Promise {\n\t\tconst project = await this.projectsService.findOne(uuid);\n\t\tif (!project) {\n\t\t\tthrow new NotFoundException('Project not found');\n\t\t}\n\n\t\tif (!project.contextFile) {\n\t\t\treturn {};\n\t\t}\n\t\ttry {\n\t\t\tconst context = await importContext(`${__dirname}/../../../public/contexts`, project.uuid);\n\t\t\treturn JSON.parse(context);\n\t\t} catch (e) {\n\t\t\tLogger.error(e, 'ProjectsController.getContext');\n\t\t\treturn {};\n\t\t}\n\t}\n\n\t@Post(URLS.PROJECTS.setContext)\n\t@ApiResponse({\n\t\tstatus: HttpStatus.OK,\n\t\tdescription: MESSAGES.OK,\n\t\ttype: Object,\n\t})\n\tpublic async setContext(@Param('uuid', ParseUUIDPipe) uuid: string, @Body() body: ContextDto): Promise {\n\t\tconst project = await this.projectsService.findOne(uuid);\n\t\tif (!project) {\n\t\t\tthrow new NotFoundException('Project not found');\n\t\t}\n\n\t\tconst ajv = new Ajv();\n\t\t// check if context is a valid json schema\n\t\tif (!ajv.validateSchema(body.context)) {\n\t\t\tthrow new BadRequestException('Invalid Context Schema');\n\t\t}\n\n\t\tif (project.engineFile) {\n\t\t\t// update the engine file with the new context\n\t\t\tconst engine = await Engine.import(`${__dirname}/../../../public/projects/${project.engineFile}`);\n\t\t\tengine.dataSchema = body.context;\n\t\t\tawait engine.export(`${__dirname}/../../../public/projects/`, project.uuid);\n\t\t}\n\n\t\tawait exportContext(body.context, `${__dirname}/../../../public/contexts`, project.uuid);\n\n\t\tproject.contextFile = `${project.uuid}.json`;\n\t\tawait this.projectsService.update(uuid, project);\n\n\t\treturn body.context;\n\t}\n\n\t@Get(URLS.PROJECTS.getDiagram)\n\t@ApiResponse({\n\t\tstatus: HttpStatus.OK,\n\t\tdescription: MESSAGES.OK,\n\t\ttype: DiagramDto,\n\t})\n\tpublic async getDiagram(@Param('uuid', ParseUUIDPipe) uuid: string): Promise {\n\t\tconst project = await this.projectsService.findOne(uuid);\n\t\tif (!project) {\n\t\t\tthrow new NotFoundException('Project not found');\n\t\t}\n\n\t\tif (!project.engineFile) {\n\t\t\tthrow new BadRequestException('Project does not have an engine file');\n\t\t}\n\n\t\ttry {\n\t\t\tconst engine = await Engine.import(`${__dirname}/../../../public/projects/${project.engineFile}`);\n\t\t\tconst diagram = getUrlDiagram(engine.toDiagram());\n\t\t\treturn { diagram };\n\t\t} catch (e) {\n\t\t\tLogger.error(e, 'ProjectsController.getDiagram');\n\t\t\tthrow new BadRequestException(`Error Generating Diagram: ${e}`);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProjectsModule.html":{"url":"modules/ProjectsModule.html","title":"module - ProjectsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProjectsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_providers\n\n\n\n\nProjectsService\n\nProjectsService\n\n\n\nProjectsModule\n\nProjectsModule\n\nProjectsModule -->\n\nProjectsService->ProjectsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/project/project.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProjectsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProjectsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProjectsService } from './services/project.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Project } from '@entities/project';\nimport { ProjectsController } from './controllers/project.controller';\nimport { MulterModule } from '@nestjs/platform-express';\n\n@Module({\n\timports: [\n\t\tTypeOrmModule.forFeature([Project]),\n\t\tMulterModule.register({\n\t\t\tdest: `${__dirname}/../../public/projects/`,\n\t\t}),\n\t],\n\tcontrollers: [ProjectsController],\n\tproviders: [ProjectsService],\n})\nexport class ProjectsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectsService.html":{"url":"injectables/ProjectsService.html","title":"injectable - ProjectsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/services/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/project/services/project.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createProjectDto: CreateProjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/project/services/project.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProjectDto\n                                    \n                                                CreateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(query: PaginateQuery)\n                \n            \n\n\n            \n                \n                    Defined in src/project/services/project.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            PaginateQuery\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(uuid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/project/services/project.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(uuid: string)\n                \n            \n\n\n            \n                \n                    Defined in src/project/services/project.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(uuid: string, updateProjectDto: UpdateProjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/project/services/project.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uuid\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProjectDto\n                                    \n                                                UpdateProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        upload\n                        \n                    \n                \n            \n            \n                \n                    \n                    upload(uploadProjectDto: UploadProjectDto)\n                \n            \n\n\n            \n                \n                    Defined in src/project/services/project.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uploadProjectDto\n                                    \n                                                UploadProjectDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { FilterOperator, FilterSuffix, PaginateQuery, paginate, Paginated } from 'nestjs-paginate';\nimport { CreateProjectDto, UploadProjectDto, UpdateProjectDto } from '../dto';\nimport { Project } from '@entities/project';\n\n@Injectable()\nexport class ProjectsService {\n\tconstructor(\n\t\t@InjectRepository(Project)\n\t\tprivate readonly repository: Repository\n\t) {}\n\n\tasync upload(uploadProjectDto: UploadProjectDto): Promise {\n\t\tconst project = this.repository.create(uploadProjectDto);\n\t\treturn await this.repository.save(project);\n\t}\n\n\tasync create(createProjectDto: CreateProjectDto): Promise {\n\t\tconst project = this.repository.create(createProjectDto);\n\t\treturn await this.repository.save(project);\n\t}\n\n\tasync findAll(query: PaginateQuery): Promise> {\n\t\treturn paginate(query, this.repository, {\n\t\t\tsortableColumns: ['uuid', 'createdAt', 'updatedAt'],\n\t\t\tnullSort: 'last',\n\t\t\tdefaultSortBy: [['createdAt', 'DESC']],\n\t\t\tsearchableColumns: ['name', 'description'],\n\t\t\tfilterableColumns: {\n\t\t\t\tname: [FilterOperator.EQ, FilterSuffix.NOT],\n\t\t\t\tisComplete: [FilterOperator.EQ],\n\t\t\t},\n\t\t});\n\t}\n\n\tasync findOne(uuid: string): Promise {\n\t\treturn await this.repository.findOneBy({ uuid });\n\t}\n\n\tasync update(uuid: string, updateProjectDto: UpdateProjectDto): Promise {\n\t\tconst project = await this.repository.findOneBy({ uuid });\n\t\tif (!project) {\n\t\t\treturn null;\n\t\t}\n\t\treturn await this.repository.save({ ...project, ...updateProjectDto });\n\t}\n\n\tasync remove(uuid: string): Promise {\n\t\tawait this.repository.delete(uuid);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/providers/requests.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/common/providers/requests.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest()\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/requests.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Request\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, Scope } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { Request } from 'express';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class RequestService {\n\tconstructor(@Inject(REQUEST) private readonly request: Request) {}\n\n\tgetRequest(): Request {\n\t\treturn this.request;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProjectDto.html":{"url":"classes/UpdateProjectDto.html","title":"class - UpdateProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/dto/update-project.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProjectDto } from './create-project.dto';\n\nexport class UpdateProjectDto extends PartialType(CreateProjectDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UploadProjectDto.html":{"url":"classes/UploadProjectDto.html","title":"class - UploadProjectDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UploadProjectDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/project/dto/upload-project.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                contextFile\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    Optional\n                                engineFile\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        contextFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/upload-project.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/upload-project.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        engineFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/upload-project.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/upload-project.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/project/dto/upload-project.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, IsString, IsUUID } from 'class-validator';\nimport type { Project } from '@entities/project';\n\nexport class UploadProjectDto implements Omit {\n\t@IsUUID()\n\tuuid: string;\n\n\t@IsString()\n\tname: string;\n\n\t@IsOptional()\n\tengineFile?: string;\n\n\t@IsOptional()\n\t@IsString()\n\tdescription: string;\n\n\t@IsOptional()\n\tcontextFile?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilService.html":{"url":"injectables/UtilService.html","title":"injectable - UtilService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/providers/util.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isKeyOfSchema\n                            \n                            \n                                    Public\n                                line\n                            \n                            \n                                    Public\n                                pre\n                            \n                            \n                                    Public\n                                removeUndefined\n                            \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isKeyOfSchema\n                        \n                    \n                \n            \n            \n                \n                    \n                    isKeyOfSchema(key, schema: T)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/util.service.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        line\n                        \n                    \n                \n            \n            \n                \n                    \n                    line(templateData: TemplateStringsArray, param: TemplateParameter)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/util.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateData\n                                    \n                                            TemplateStringsArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                TemplateParameter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        pre\n                        \n                    \n                \n            \n            \n                \n                    \n                    pre(templateData: TemplateStringsArray, param: TemplateParameter)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/util.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateData\n                                    \n                                            TemplateStringsArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    param\n                                    \n                                                TemplateParameter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        removeUndefined\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUndefined(argv: T)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/util.service.ts:36\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    argv\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        template\n                        \n                    \n                \n            \n            \n                \n                    \n                    template(templateData: TemplateStringsArray, param: T[], delimiter: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/providers/util.service.ts:8\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    templateData\n                                    \n                                            TemplateStringsArray\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    param\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    delimiter\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        '\\n'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype TemplateParameter = any[];\n\n@Injectable()\nexport class UtilService {\n\tpublic template(templateData: TemplateStringsArray, param: T[], delimiter = '\\n'): string {\n\t\tlet output = '';\n\t\tfor (let i = 0; i  text.replace(/^\\s+/gm, ''))\n\t\t\t.join(delimiter)\n\t\t\t.trim();\n\t}\n\n\tpublic pre(templateData: TemplateStringsArray, ...param: TemplateParameter): string {\n\t\treturn this.template(templateData, param, '\\n');\n\t}\n\n\tpublic line(templateData: TemplateStringsArray, ...param: TemplateParameter): string {\n\t\treturn this.template(templateData, param, ' ');\n\t}\n\n\tpublic isKeyOfSchema(key: unknown, schema: T): key is keyof T {\n\t\treturn typeof key === 'string' && key in schema;\n\t}\n\n\tpublic removeUndefined(argv: T): Record {\n\t\t// https://stackoverflow.com/questions/25421233\n\t\t// JSON.parse(JSON.stringify(args));\n\t\treturn Object.fromEntries(Object.entries(argv).filter(([, value]: [string, unknown]) => value !== undefined));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^2.0.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.2\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/serve-static : ^3.0.1\n        \n            @nestjs/swagger : ^6.3.0\n        \n            @nestjs/terminus : ^9.2.2\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            ajv : ^8.12.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            commander : ^10.0.1\n        \n            compression : ^1.7.4\n        \n            helmet : ^7.0.0\n        \n            nestjs-paginate : ^8.1.4\n        \n            papaparse : ^5.4.1\n        \n            pg : ^8.9.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            sqema : ^1.0.2\n        \n            to-json-schema : ^0.2.5\n        \n            typeorm : ^0.3.16\n        \n            typescript-business-rules-engine : ^1.1.2\n        \n            xlsx : https://cdn.sheetjs.com/xlsx-0.19.3/xlsx-0.19.3.tgz\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MESSAGES   (src/.../messages.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/utils/response/messages.ts\n    \n        \n            \n                \n                    \n                        \n                        MESSAGES\n                    \n                \n                        \n                            \n                                 CONTINUE\n                            \n                        \n                        \n                            \n                                Value : Continue\n                            \n                        \n                        \n                            \n                                 SWITCHING_PROTOCOLS\n                            \n                        \n                        \n                            \n                                Value : Switching Protocols\n                            \n                        \n                        \n                            \n                                 PROCESSING\n                            \n                        \n                        \n                            \n                                Value : Processing\n                            \n                        \n                        \n                            \n                                 EARLYHINTS\n                            \n                        \n                        \n                            \n                                Value : Early Hints\n                            \n                        \n                        \n                            \n                                 OK\n                            \n                        \n                        \n                            \n                                Value : OK\n                            \n                        \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                Value : Created\n                            \n                        \n                        \n                            \n                                 ACCEPTED\n                            \n                        \n                        \n                            \n                                Value : Accepted\n                            \n                        \n                        \n                            \n                                 NON_AUTHORITATIVE_INFORMATION\n                            \n                        \n                        \n                            \n                                Value : Non-Authoritative Information\n                            \n                        \n                        \n                            \n                                 NO_CONTENT\n                            \n                        \n                        \n                            \n                                Value : No Content\n                            \n                        \n                        \n                            \n                                 RESET_CONTENT\n                            \n                        \n                        \n                            \n                                Value : Reset Content\n                            \n                        \n                        \n                            \n                                 PARTIAL_CONTENT\n                            \n                        \n                        \n                            \n                                Value : Partial Content\n                            \n                        \n                        \n                            \n                                 AMBIGUOUS\n                            \n                        \n                        \n                            \n                                Value : Ambiguous\n                            \n                        \n                        \n                            \n                                 MOVED_PERMANENTLY\n                            \n                        \n                        \n                            \n                                Value : Moved Permanently\n                            \n                        \n                        \n                            \n                                 FOUND\n                            \n                        \n                        \n                            \n                                Value : Found\n                            \n                        \n                        \n                            \n                                 SEE_OTHER\n                            \n                        \n                        \n                            \n                                Value : See Other\n                            \n                        \n                        \n                            \n                                 NOT_MODIFIED\n                            \n                        \n                        \n                            \n                                Value : Not Modified\n                            \n                        \n                        \n                            \n                                 TEMPORARY_REDIRECT\n                            \n                        \n                        \n                            \n                                Value : Temporary Redirect\n                            \n                        \n                        \n                            \n                                 PERMANENT_REDIRECT\n                            \n                        \n                        \n                            \n                                Value : Permanent Redirect\n                            \n                        \n                        \n                            \n                                 BAD_REQUEST\n                            \n                        \n                        \n                            \n                                Value : Bad Request\n                            \n                        \n                        \n                            \n                                 UNAUTHORIZED\n                            \n                        \n                        \n                            \n                                Value : Unauthorized\n                            \n                        \n                        \n                            \n                                 PAYMENT_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : Payment Required\n                            \n                        \n                        \n                            \n                                 FORBIDDEN\n                            \n                        \n                        \n                            \n                                Value : Forbidden\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : Not Found\n                            \n                        \n                        \n                            \n                                 METHOD_NOT_ALLOWED\n                            \n                        \n                        \n                            \n                                Value : Method Not Allowed\n                            \n                        \n                        \n                            \n                                 NOT_ACCEPTABLE\n                            \n                        \n                        \n                            \n                                Value : Not Acceptable\n                            \n                        \n                        \n                            \n                                 PROXY_AUTHENTICATION_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : Proxy Authentication Required\n                            \n                        \n                        \n                            \n                                 REQUEST_TIMEOUT\n                            \n                        \n                        \n                            \n                                Value : Request Timeout\n                            \n                        \n                        \n                            \n                                 CONFLICT\n                            \n                        \n                        \n                            \n                                Value : Conflict\n                            \n                        \n                        \n                            \n                                 GONE\n                            \n                        \n                        \n                            \n                                Value : Gone\n                            \n                        \n                        \n                            \n                                 LENGTH_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : Length Required\n                            \n                        \n                        \n                            \n                                 PRECONDITION_FAILED\n                            \n                        \n                        \n                            \n                                Value : Precondition Failed\n                            \n                        \n                        \n                            \n                                 PAYLOAD_TOO_LARGE\n                            \n                        \n                        \n                            \n                                Value : Payload Too Large\n                            \n                        \n                        \n                            \n                                 URI_TOO_LONG\n                            \n                        \n                        \n                            \n                                Value : URI Too Long\n                            \n                        \n                        \n                            \n                                 UNSUPPORTED_MEDIA_TYPE\n                            \n                        \n                        \n                            \n                                Value : Unsupported Media Type\n                            \n                        \n                        \n                            \n                                 REQUESTED_RANGE_NOT_SATISFIABLE\n                            \n                        \n                        \n                            \n                                Value : Requested range not satisfiable\n                            \n                        \n                        \n                            \n                                 EXPECTATION_FAILED\n                            \n                        \n                        \n                            \n                                Value : Expectation Failed\n                            \n                        \n                        \n                            \n                                 I_AM_A_TEAPOT\n                            \n                        \n                        \n                            \n                                Value : I'm a teapot\n                            \n                        \n                        \n                            \n                                 MISDIRECTED\n                            \n                        \n                        \n                            \n                                Value : Misdirected\n                            \n                        \n                        \n                            \n                                 UNPROCESSABLE_ENTITY\n                            \n                        \n                        \n                            \n                                Value : Unprocessable Entity\n                            \n                        \n                        \n                            \n                                 FAILED_DEPENDENCY\n                            \n                        \n                        \n                            \n                                Value : Failed Dependency\n                            \n                        \n                        \n                            \n                                 PRECONDITION_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : Precondition Required\n                            \n                        \n                        \n                            \n                                 TOO_MANY_REQUESTS\n                            \n                        \n                        \n                            \n                                Value : Too Many Requests\n                            \n                        \n                        \n                            \n                                 INTERNAL_SERVER_ERROR\n                            \n                        \n                        \n                            \n                                Value : Internal Server Error\n                            \n                        \n                        \n                            \n                                 NOT_IMPLEMENTED\n                            \n                        \n                        \n                            \n                                Value : Not Implemented\n                            \n                        \n                        \n                            \n                                 BAD_GATEWAY\n                            \n                        \n                        \n                            \n                                Value : Bad Gateway\n                            \n                        \n                        \n                            \n                                 SERVICE_UNAVAILABLE\n                            \n                        \n                        \n                            \n                                Value : Service Unavailable\n                            \n                        \n                        \n                            \n                                 GATEWAY_TIMEOUT\n                            \n                        \n                        \n                            \n                                Value : Gateway Timeout\n                            \n                        \n                        \n                            \n                                 HTTP_VERSION_NOT_SUPPORTED\n                            \n                        \n                        \n                            \n                                Value : HTTP Version Not Supported\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../app.ts)\n                        \n                        \n                            bootstrap   (src/.../repl.ts)\n                        \n                        \n                            middleware   (src/.../app.middleware.ts)\n                        \n                        \n                            PaginateQueryOptions   (src/.../decorators.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    https://docs.nestjs.com\nhttps://github.com/nestjs/nest/tree/master/sample\nhttps://github.com/nestjs/nest/issues/2249#issuecomment-494734673\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    src/repl.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    https://docs.nestjs.com/recipes/repl\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    src/app.middleware.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        middleware\n                        \n                    \n                \n            \n            \n                \nmiddleware(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     INestApplication\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/common/utils/pagination/decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaginateQueryOptions\n                        \n                    \n                \n            \n            \n                \nPaginateQueryOptions()\n                \n            \n\n\n\n\n        \n    \n    src/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n            \n                \nsetupSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n                    https://docs.nestjs.com/recipes/swagger\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProjectsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ProjectsModule\n\n\n\ncluster_ProjectsModule_providers\n\n\n\n\nBaseModule\n\nBaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBaseModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nProjectsModule\n\nProjectsModule\n\nAppModule -->\n\nProjectsModule->AppModule\n\n\n\n\n\nProjectsService\n\nProjectsService\n\nProjectsModule -->\n\nProjectsService->ProjectsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : A Typescript rule engine where rules are defined in JSON format.\n        \n            Keywords : business, rules, engine, typescript, json\n        \n            Homepage : https://github.com/Carlososuna11/business-rules-backend#readme\n        \n            Bugs : https://github.com/Carlososuna11/business-rules-backend/issues\n        \n            License : GPLV3\n        \n            Repository : git+https://github.com/Carlososuna11/business-rules-backend.git\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ArgumentInfo   (src/.../index.ts)\n                        \n                        \n                            CateroryInfo   (src/.../index.ts)\n                        \n                        \n                            CommandInfo   (src/.../index.ts)\n                        \n                        \n                            CommandType   (src/.../index.ts)\n                        \n                        \n                            CommandTypesOptions   (src/.../index.ts)\n                        \n                        \n                            Config   (src/.../config.interface.ts)\n                        \n                        \n                            Default   (src/.../config.interface.ts)\n                        \n                        \n                            Objectype   (src/.../config.interface.ts)\n                        \n                        \n                            Production   (src/.../config.interface.ts)\n                        \n                        \n                            TemplateParameter   (src/.../util.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/index.ts\n    \n    \n        \n            \n                \n                    \n                    ArgumentInfo\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CateroryInfo\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CommandInfo\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CommandType\n                \n            \n            \n                \n                        \"function\" | \"operator\" | \"context\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CommandTypesOptions\n                \n            \n            \n                \n                        \"string\" | \"number\" | \"boolean\" | \"object\" | \"array\" | \"unknown\" | \"date\" | \"set\" | \"void\"\n\n                \n            \n        \n    \n    src/config/config.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Config\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Default\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Objectype\n                \n            \n            \n                \n                        Record\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Production\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/common/providers/util.service.ts\n    \n    \n        \n            \n                \n                    \n                    TemplateParameter\n                \n            \n            \n                \n                        any[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
